{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"time",
				"timelineSearchFView"
			],
			[
				"timelone",
				"timelineMonthScrollerFView"
			],
			[
				"easter",
				"easterEggActive"
			],
			[
				"eat",
				"easterEggActive"
			],
			[
				"easterE",
				"easterEggActive"
			],
			[
				"sub",
				"subscribed"
			],
			[
				"subscr",
				"subscribed"
			],
			[
				"vide",
				"videoCube"
			],
			[
				"su",
				"subscribed"
			],
			[
				"timelineMin",
				"timelineMinuteScrollerFView"
			],
			[
				"modifi",
				"modifierChain"
			],
			[
				"mod",
				"modifierChain"
			],
			[
				"Modifi",
				"ModifierChain"
			],
			[
				"timelineTo",
				"timelineToggleFView"
			],
			[
				"momentButt",
				"momentButtonFView"
			],
			[
				"userI",
				"userIsPublishing"
			],
			[
				"timelineMInu",
				"timelineMinuteScroller"
			],
			[
				"timelineYear",
				"timelineYearScrollerFView"
			],
			[
				"inner",
				"innerHeight"
			],
			[
				"three",
				"threePointLighting"
			],
			[
				"Twl",
				"TwilightPrincessLink"
			],
			[
				"SCRE",
				"SCREEN_HEIGHT"
			],
			[
				"SCREEN",
				"SCREEN_WIDTH"
			],
			[
				"Win",
				"WindWakerLink"
			],
			[
				"video",
				"videoTexture"
			],
			[
				"rectM",
				"rectMaterial"
			],
			[
				"Mesh",
				"MeshBasicMaterial"
			],
			[
				"tran",
				"transparent"
			],
			[
				"text",
				"textAlign"
			],
			[
				"ralr",
				"raleway-extralight-webfont"
			],
			[
				"des",
				"destinationY"
			],
			[
				"desit",
				"destinationX"
			],
			[
				"timelineMomentBack",
				"timelineMomentBackgroundHeight"
			],
			[
				"timelineMOmnt",
				"timelineMomentBackgroundWidth"
			],
			[
				"pan",
				"panTransition"
			],
			[
				"zoom",
				"zoomTransition"
			],
			[
				"fv",
				"fviewId"
			],
			[
				"timelineMinu",
				"timelineMinuteScroller"
			],
			[
				"tokboxA",
				"tokboxArchiveName"
			],
			[
				"tokboxAr",
				"tokboxArchiveId"
			]
		]
	},
	"buffers":
	[
		{
			"file": "moment.jade",
			"settings":
			{
				"buffer_size": 7284,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "\n\n			var SCREEN_WIDTH = window.innerWidth;\n			var SCREEN_HEIGHT = window.innerHeight;\n			var FLOOR = -250;\n\n			var container,stats;\n\n			var camera, scene;\n			var renderer;\n\n			var mesh, zmesh, geometry;\n\n			var mouseX = 0, mouseY = 0;\n\n			var windowHalfX = window.innerWidth / 2;\n			var windowHalfY = window.innerHeight / 2;\n\n			var clock = new THREE.Clock();\n\n			document.addEventListener( 'mousemove', onDocumentMouseMove, false );\n\n			init();\n			animate();\n\n			function init() {\n\n				container = document.getElementById( 'container' );\n\n				camera = new THREE.PerspectiveCamera( 35, SCREEN_WIDTH / SCREEN_HEIGHT, 1, 5000 );\n				camera.position.z = 1900;\n\n				scene = new THREE.Scene();\n\n				scene.fog = new THREE.Fog( 0xffffff, 2000, 5000 );\n				scene.fog.color.setHSV( 0.6, 0.125, 1 );\n\n				scene.add( camera );\n\n				// GROUND\n\n				var x = document.createElement( \"canvas\" );\n				var xc = x.getContext(\"2d\");\n				x.width = x.height = 128;\n				xc.fillStyle = \"#fff\";\n				xc.fillRect(0, 0, 128, 128);\n				xc.fillStyle = \"#000\";\n				xc.fillRect(0, 0, 64, 64);\n				xc.fillStyle = \"#999\";\n				xc.fillRect(32, 32, 32, 32);\n				xc.fillStyle = \"#000\";\n				xc.fillRect(64, 64, 64, 64);\n				xc.fillStyle = \"#555\";\n				xc.fillRect(96, 96, 32, 32);\n\n				var map = new THREE.Texture( x, new THREE.UVMapping(), THREE.RepeatWrapping, THREE.RepeatWrapping );\n				map.needsUpdate = true;\n				map.repeat.set( 60, 60 );\n\n				var xm = new THREE.MeshPhongMaterial( { map: map, emissive: 0x999999, perPixel: true } );\n\n				geometry = new THREE.PlaneGeometry( 8000, 8000 );\n\n				mesh = new THREE.Mesh( geometry, xm );\n				mesh.position.set( 0, FLOOR, 0 );\n				scene.add( mesh );\n\n				mesh.receiveShadow = true;\n\n\n				// LIGHTS\n\n				var ambient = new THREE.AmbientLight( 0x222222 );\n				scene.add( ambient );\n\n\n				var light = new THREE.DirectionalLight( 0xffffff, 1.65 );\n				light.position.set( 0, 140, 500 );\n				light.position.multiplyScalar( 1.1 );\n				scene.add( light );\n\n				light.castShadow = true;\n\n				light.shadowMapWidth = 2048;\n				light.shadowMapHeight = 2048;\n\n				var d = 390;\n\n				light.shadowCameraLeft = -d * 2;\n				light.shadowCameraRight = d * 2;\n				light.shadowCameraTop = d;\n				light.shadowCameraBottom = -d;\n\n				light.shadowCameraFar = 2000;\n				//light.shadowCameraVisible = true;\n\n				// RENDERER\n\n				renderer = new THREE.WebGLRenderer( { antialias: true } );\n				renderer.setSize( SCREEN_WIDTH, SCREEN_HEIGHT );\n				renderer.domElement.style.position = \"relative\";\n\n				renderer.setClearColor( scene.fog.color, 1 );\n\n				container.appendChild( renderer.domElement );\n\n				renderer.gammaInput = true;\n				renderer.gammaOutput = true;\n				renderer.physicallyBasedShading = true;\n\n				renderer.shadowMapEnabled = true;\n\n\n				// STATS\n\n				stats = new Stats();\n				stats.domElement.style.position = 'absolute';\n				stats.domElement.style.top = '0px';\n				stats.domElement.style.zIndex = 100;\n				container.appendChild( stats.domElement );\n\n				stats.domElement.children[ 0 ].children[ 0 ].style.color = \"#777\";\n				stats.domElement.children[ 0 ].style.background = \"transparent\";\n				stats.domElement.children[ 0 ].children[ 1 ].style.display = \"none\";\n\n				//\n\n				var scale = 7;\n\n				var loader = new THREE.JSONLoader(),\n					callback = function( geometry ) { createScene( geometry,  0, FLOOR, 0, 7 ) };\n\n				loader.load( \"models/skinned/heavy/heavy.js\", function( geometry ) { createScene( geometry,  300, FLOOR, 0, scale ) } );\n				loader.load( \"models/skinned/sniper/sniper.js\", function( geometry ) { createScene( geometry,  -250, FLOOR, 0, scale ) } );\n				loader.load( \"models/skinned/engineer/engineer.js\", function( geometry ) { createScene( geometry,  0, FLOOR, 175, scale ) } );\n				loader.load( \"models/skinned/medic/medic.js\", function( geometry ) { createScene( geometry,  -500, FLOOR, 175, scale ) } );\n				loader.load( \"models/skinned/scout/scout.js\", function( geometry ) { createScene( geometry,  400, FLOOR, 275, scale ) } );\n\n				//\n\n				window.addEventListener( 'resize', onWindowResize, false );\n\n			}\n\n			function onWindowResize() {\n\n				windowHalfX = window.innerWidth / 2;\n				windowHalfY = window.innerHeight / 2;\n\n				camera.aspect = window.innerWidth / window.innerHeight;\n				camera.updateProjectionMatrix();\n\n				renderer.setSize( window.innerWidth, window.innerHeight );\n\n			}\n\n			function ensureLoop( animation ) {\n\n				for ( var i = 0; i < animation.hierarchy.length; i ++ ) {\n\n					var bone = animation.hierarchy[ i ];\n\n					var first = bone.keys[ 0 ];\n					var last = bone.keys[ bone.keys.length - 1 ];\n\n					last.pos = first.pos;\n					last.rot = first.rot;\n					last.scl = first.scl;\n\n				}\n\n			}\n\n			function createScene( geometry, x, y, z, s ) {\n\n				ensureLoop( geometry.animation );\n\n				geometry.computeBoundingBox();\n				var bb = geometry.boundingBox;\n\n				THREE.AnimationHandler.add( geometry.animation );\n\n				for ( var i = 0; i < geometry.materials.length; i ++ ) {\n\n					var m = geometry.materials[ i ];\n					m.skinning = true;\n					m.ambient.copy( m.color );\n\n					m.wrapAround = true;\n					m.perPixel = true;\n\n				}\n\n\n				var mesh = new THREE.SkinnedMesh( geometry, new THREE.MeshFaceMaterial() );\n				mesh.position.set( x, y - bb.min.y * s, z );\n				mesh.scale.set( s, s, s );\n				scene.add( mesh );\n\n				mesh.castShadow = true;\n				mesh.receiveShadow = true;\n\n\n				animation = new THREE.Animation( mesh, geometry.animation.name );\n				animation.JITCompile = false;\n				animation.interpolationType = THREE.AnimationHandler.LINEAR;\n\n				animation.play();\n\n			}\n\n			function onDocumentMouseMove( event ) {\n\n				mouseX = ( event.clientX - windowHalfX );\n				mouseY = ( event.clientY - windowHalfY );\n\n			}\n\n			//\n\n			function animate() {\n\n				requestAnimationFrame( animate );\n\n				render();\n				stats.update();\n\n			}\n\n			function render() {\n\n				var delta = 0.75 * clock.getDelta();\n\n				camera.position.x += ( mouseX - camera.position.x ) * .05;\n				camera.position.y = THREE.Math.clamp( camera.position.y + ( - mouseY - camera.position.y ) * .05, 0, 1000 );\n\n				camera.lookAt( scene.position );\n\n				THREE.AnimationHandler.update( delta );\n\n				renderer.render( scene, camera );\n\n			}\n\n		",
			"settings":
			{
				"buffer_size": 6147,
				"line_ending": "Unix"
			}
		},
		{
			"file": "moment.coffee",
			"settings":
			{
				"buffer_size": 65312,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Template.timelineDayScroller.rendered = ->\n			timelineDayScrollerFView = FView.byId('timelineDayScroller')\n			log 'TIMELINEDAYSCROLLER FVIEW',timelineDayScrollerFView\n			scrollView = timelineDayScrollerFView.view._eventInput\n			log 'SCROLLVIEW?!',scrollView\n			window.timelineDayScroller = timelineDayScrollerFView.view\n			#Set the viewSequence within the scrollView to be a loop\n			window.timelineDaySequence = window.timelineDayScroller._node\n			window.timelineDaySequence._.loop = true\n\n			scrollView.on('start', (e) ->\n				#log 'STARTING!!!!!!',this\n			)\n			scrollView.on('update', (e) ->\n				#log 'UPDATING!!!!',this\n			)\n			scrollView.on('end', (e) ->\n				#log 'ENDING!!!!!!!',this, this._cachedIndex\n			)\n			@autorun((computation)->\n				timelineActive = Session.get 'timelineActive'\n				if timelineActive is true\n					timelineDayScrollerFView.modifier.halt()\n					timelineDayScrollerFView.modifier.setTransform Transform.scale(1,1,1),\n						method: 'spring'\n						period: 500\n						dampingRatio: 0.5\n					timelineDayScrollerFView.modifier.setOpacity 1,\n						method: 'spring'\n						period: 500\n						dampingRatio: 0.5\n				else\n					timelineDayScrollerFView.modifier.halt()\n					timelineDayScrollerFView.modifier.setTransform Transform.scale(1,1,1),\n						method: 'spring'\n						period: 500\n						dampingRatio: 0.5\n					timelineDayScrollerFView.modifier.setOpacity 1,\n						method: 'spring'\n						period: 500\n						dampingRatio: 0.5\n			)",
			"settings":
			{
				"buffer_size": 1443,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "currentYear = Session.get('currentYear')\n				previousYear = window.timelineYearScroller.getCurrentIndex()\n				totalAmount = window.timelineYearScroller._node._.array.length\n				amountMidPoint = totalAmount / 2\n\n				log '*********************************************************************'\n\n				#What is the previousYear?\n				log 'previousYear',previousYear\n				#What is the currentYear?\n				log 'currentYear',currentYear\n\n				scrollStart = 0\n				#log '&&&&&&&&&&&&&&&&&&&&&&&&&scrollStart&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&',scrollStart\n\n				if previousYear > amountMidPoint and currentYear < amountMidPoint\n					log '***************We\\'re gonna overscroll past 0 here!*******(forwards)'\n					#Calculate the forwards sroll distance\n					scrollDistance = totalAmount + currentYear - previousYear\n					if scrollDistance < 0 then scrollDistance = scrollDistance * -1 #Make sure that scrollDistance is always a positive number\n					log '##############currentYear distance from previousYear##############',scrollDistance\n					for i in [0...scrollDistance]\n						window.timelineYearScroller.goToNextPage()\n				else if previousYear < amountMidPoint and currentYear > amountMidPoint\n					log '%%%%%%%%%%%%%%%We\\'re gonna overscroll past 1439 here!%%%%%(backwards)'\n					#Calculate the backwards scroll distance\n					scrollDistance = totalAmount + previousYear - currentYear\n					if scrollDistance < 0 then scrollDistance = scrollDistance * -1 #Make sure that scrollDistance is always a positive number\n					log '@@@@@@@@@@@@@@currentYear distance from previousYear@@@@@@@@@@@@@@',scrollDistance\n					for i in [0...scrollDistance]\n						window.timelineYearScroller.goToPreviousPage()\n				else\n					#No overlaps going on here, just scroll normally to get things going for the time being, I can optimize this last.\n					log 'Just scroll as normal!'\n					scrollDistance = previousYear - currentYear\n					if scrollDistance < 0 then scrollDistance = scrollDistance * -1 #Make sure that scrollDistance is always a positive number\n					if previousYear < currentYear\n						log '!!!!!!!!!!!!!currentYear distance from previousYear!(forwards)!!!!',scrollDistance\n						for i in [0...scrollDistance]\n							window.timelineYearScroller.goToNextPage()\n					else\n						log '!!!!!!!!!!!!currentYear distance from previousYear!(backwards)!!!!',scrollDistance\n						#if previousYear is currentYear\n						#	log 'Scrolling back one to cover this edgecase!'\n						#	window.timelineYearScroller.goToPreviousPage()\n						#else\n						for i in [0...scrollDistance]\n							window.timelineYearScroller.goToPreviousPage()\n\n						#for i in [0...scrollDistance]\n						#	window.timelineYearScroller.goToPreviousPage()\n\n				#Get the Template instance\n				instance = Template.instance()\n				#log 'AUTORUN INSTANCE',instance",
			"settings":
			{
				"buffer_size": 2783,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "https://www.youtube.com/watch?v=vw5_YyM4hn8\nhttps://dl.dropboxusercontent.com/u/1236764/temp/stackoverflow_20131023/2.html\nhttp://stemkoski.github.io/Three.js/Model-Animation-Control.html\nhttp://threejs.org/examples/webgl_loader_collada.html\n\nhttp://foxtube.com/videos/beautiful-chesty-babe-called-shae-summers-soaked-oil-while-fucking-6960.shtml\n\ncurrentMonth = Session.get('currentMonth')\n				previousMonth = window.timelineMonthScroller.getCurrentIndex()\n				totalAmount = window.timelineMonthScroller._node._.array.length\n				amountMidPoint = totalAmount / 2\n\n				log '*********************************************************************'\n\n				#What is the previousMonth?\n				log 'previousMonth',previousMonth\n				#What is the currentMonth?\n				log 'currentMonth',currentMonth\n\n				scrollStart = 0\n				#log '&&&&&&&&&&&&&&&&&&&&&&&&&scrollStart&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&',scrollStart\n\n				if previousMonth > amountMidPoint and currentMonth < amountMidPoint\n					log '***************We\\'re gonna overscroll past 0 here!*******(forwards)'\n					#Calculate the forwards sroll distance\n					scrollDistance = totalAmount + currentMonth - previousMonth\n					if scrollDistance < 0 then scrollDistance = scrollDistance * -1 #Make sure that scrollDistance is always a positive number\n					log '##############currentMonth distance from previousMonth##############',scrollDistance\n					for i in [0...scrollDistance]\n						window.timelineMonthScroller.goToNextPage()\n				else if previousMonth < amountMidPoint and currentMonth > amountMidPoint\n					log '%%%%%%%%%%%%%%%We\\'re gonna overscroll past 1439 here!%%%%%(backwards)'\n					#Calculate the backwards scroll distance\n					scrollDistance = totalAmount + previousMonth - currentMonth\n					if scrollDistance < 0 then scrollDistance = scrollDistance * -1 #Make sure that scrollDistance is always a positive number\n					log '@@@@@@@@@@@@@@currentMonth distance from previousMonth@@@@@@@@@@@@@@',scrollDistance\n					for i in [0...scrollDistance]\n						window.timelineMonthScroller.goToPreviousPage()\n				else\n					#No overlaps going on here, just scroll normally to get things going for the time being, I can optimize this last.\n					log 'Just scroll as normal!'\n					scrollDistance = previousMonth - currentMonth\n					if scrollDistance < 0 then scrollDistance = scrollDistance * -1 #Make sure that scrollDistance is always a positive number\n					if previousMonth < currentMonth\n						log '!!!!!!!!!!!!!currentMonth distance from previousMonth!(forwards)!!!!',scrollDistance\n						for i in [0...scrollDistance]\n							window.timelineMonthScroller.goToNextPage()\n					else\n						log '!!!!!!!!!!!!currentMonth distance from previousMonth!(backwards)!!!!',scrollDistance\n						if previousMonth is currentMonth\n							log 'Scrolling back one to cover this edgecase!'\n							window.timelineMonthScroller.goToPreviousPage()\n						else\n							for i in [0...scrollDistance]\n								window.timelineMonthScroller.goToPreviousPage()\n\n						#for i in [0...scrollDistance]\n						#	window.timelineMonthScroller.goToPreviousPage()\n\n				#Get the Template instance\n				instance = Template.instance()",
			"settings":
			{
				"buffer_size": 3131,
				"line_ending": "Unix",
				"name": "https://www.youtube.com/watch?v=vw5_YyM4hn8"
			}
		},
		{
			"contents": "currentMinute = Session.get('currentMinute')\n				previousMinute = window.timelineMinuteScroller.getCurrentIndex()\n				totalAmount = window.timelineMinuteScroller._node._.array.length\n				amountMidPoint = totalAmount / 2\n\n				log '====================================================================='\n\n				#What is the previousMinute?\n				log 'previousMinute',previousMinute\n				#What is the currentMinute?\n				log 'currentMinute',currentMinute\n\n				scrollStart = 0\n				#log '&&&&&&&&&&&&&&&&&&&&&&&&&scrollStart&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&',scrollStart\n\n				if previousMinute > amountMidPoint and currentMinute < amountMidPoint\n					log '***************We\\'re gonna overscroll past 0 here!*******(forwards)'\n					#Calculate the forwards sroll distance\n					scrollDistance = totalAmount + currentMinute - previousMinute\n					if scrollDistance < 0 then scrollDistance = scrollDistance * -1 #Make sure that scrollDistance is always a positive number\n					log '##############currentMinute distance from previousMinute##############',scrollDistance\n					for i in [0...scrollDistance]\n						window.timelineMinuteScroller.goToNextPage()\n				else if previousMinute < amountMidPoint and currentMinute > amountMidPoint\n					log '%%%%%%%%%%%%%%%We\\'re gonna overscroll past 59 here!%%%%%(backwards)'\n					#Calculate the backwards scroll distance\n					scrollDistance = totalAmount + previousMinute - currentMinute\n					if scrollDistance < 0 then scrollDistance = scrollDistance * -1 #Make sure that scrollDistance is always a positive number\n					log '@@@@@@@@@@@@@@currentMinute distance from previousMinute@@@@@@@@@@@@@@',scrollDistance\n					for i in [0...scrollDistance]\n						window.timelineMinuteScroller.goToPreviousPage()\n				else\n					#No overlaps going on here, just scroll normally to get things going for the time being, I can optimize this last.\n					log 'Just scroll as normal!'\n					scrollDistance = previousMinute - currentMinute\n					if scrollDistance < 0 then scrollDistance = scrollDistance * -1 #Make sure that scrollDistance is always a positive number\n					if previousMinute < currentMinute\n						log '!!!!!!!!!!!!!currentMinute distance from previousMinute!(forwards)!!!!',scrollDistance\n						#We need to add a +1 here so that we'll scroll to the proper top element, because of indexes.\n						#scrollDistance = scrollDistance + 1\n						for i in [0...scrollDistance]\n							window.timelineMinuteScroller.goToNextPage()\n					else\n						log '!!!!!!!!!!!!currentMinute distance from previousMinute!(backwards)!!!!',scrollDistance\n						#Check for an edge case where the user has clicked on a different index but it won't change to that one because of an overflow issue\n						if previousMinute is currentMinute\n							log 'Scrolling back one to cover this edgecase!'\n							window.timelineMinuteScroller.goToPreviousPage()\n						else\n							for i in [0...scrollDistance]\n								window.timelineMinuteScroller.goToPreviousPage()\n",
			"settings":
			{
				"buffer_size": 2941,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "###currentMonth = Session.get('currentMonth')\n				previousMonth = window.timelineMonthScroller.getCurrentIndex()\n				totalAmount = window.timelineMonthScroller._node._.array.length\n				amountMidPoint = totalAmount / 2\n\n				log '*********************************************************************'\n\n				#What is the previousMonth?\n				log 'previousMonth',previousMonth\n				#What is the currentMonth?\n				log 'currentMonth',currentMonth\n\n				scrollStart = 0\n				#log '&&&&&&&&&&&&&&&&&&&&&&&&&scrollStart&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&',scrollStart\n\n				if previousMonth > amountMidPoint and currentMonth < amountMidPoint\n					log '***************We\\'re gonna overscroll past 0 here!*******(forwards)'\n					#Calculate the forwards sroll distance\n					scrollDistance = totalAmount + currentMonth - previousMonth\n					if scrollDistance < 0 then scrollDistance = scrollDistance * -1 #Make sure that scrollDistance is always a positive number\n					log '##############currentMonth distance from previousMonth##############',scrollDistance\n					for i in [0...scrollDistance]\n						window.timelineMonthScroller.goToNextPage()\n				else if previousMonth < amountMidPoint and currentMonth > amountMidPoint\n					log '%%%%%%%%%%%%%%%We\\'re gonna overscroll past 1439 here!%%%%%(backwards)'\n					#Calculate the backwards scroll distance\n					scrollDistance = totalAmount + previousMonth - currentMonth\n					if scrollDistance < 0 then scrollDistance = scrollDistance * -1 #Make sure that scrollDistance is always a positive number\n					log '@@@@@@@@@@@@@@currentMonth distance from previousMonth@@@@@@@@@@@@@@',scrollDistance\n					for i in [0...scrollDistance]\n						window.timelineMonthScroller.goToPreviousPage()\n				else\n					#No overlaps going on here, just scroll normally to get things going for the time being, I can optimize this last.\n					log 'Just scroll as normal!'\n					scrollDistance = previousMonth - currentMonth\n					if scrollDistance < 0 then scrollDistance = scrollDistance * -1 #Make sure that scrollDistance is always a positive number\n					if previousMonth < currentMonth\n						log '!!!!!!!!!!!!!currentMonth distance from previousMonth!(forwards)!!!!',scrollDistance\n						for i in [0...scrollDistance]\n							window.timelineMonthScroller.goToNextPage()\n					else\n						log '!!!!!!!!!!!!currentMonth distance from previousMonth!(backwards)!!!!',scrollDistance\n						if previousMonth is currentMonth\n							log 'Scrolling back one to cover this edgecase!'\n							window.timelineMonthScroller.goToPreviousPage()\n						else\n							for i in [0...scrollDistance]\n								window.timelineMonthScroller.goToPreviousPage()\n\n						#for i in [0...scrollDistance]\n						#	window.timelineMonthScroller.goToPreviousPage()\n\n				#Get the Template instance\n				instance = Template.instance()###\n\n\n\n				###currentDay = Session.get('currentDay')\n				previousDay = window.timelineDayScroller.getCurrentIndex()\n				totalAmount = window.timelineDayScroller._node._.array.length\n				amountMidPoint = totalAmount / 2\n\n				log '*********************************************************************'\n\n				#What is the previousDay?\n				log 'previousDay',previousDay\n				#What is the currentDay?\n				log 'currentDay',currentDay\n\n				scrollStart = 0\n				#log '&&&&&&&&&&&&&&&&&&&&&&&&&scrollStart&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&',scrollStart\n\n				###timelineActive = Session.get('timelineActive')\n				if timelineActive is true\n					fview.modifier.halt()\n					fview.modifier.setTransform Transform.scale(1,1,1),\n						method: 'spring'\n						period: 500\n						dampingRatio: 0.5\n				else\n					fview.modifier.halt()\n					fview.modifier.setTransform Transform.scale(0,0,0),\n						method: 'spring'\n						period: 500\n						dampingRatio: 0.5###\n\n				###if previousDay > amountMidPoint and currentDay < amountMidPoint\n					log '***************We\\'re gonna overscroll past 0 here!*******(forwards)'\n					#Calculate the forwards sroll distance\n					scrollDistance = totalAmount + currentDay - previousDay\n					if scrollDistance < 0 then scrollDistance = scrollDistance * -1 #Make sure that scrollDistance is always a positive number\n					log '##############currentDay distance from previousDay##############',scrollDistance\n					for i in [0...scrollDistance]\n						window.timelineDayScroller.goToNextPage()\n				else if previousDay < amountMidPoint and currentDay > amountMidPoint\n					log '%%%%%%%%%%%%%%%We\\'re gonna overscroll past 1439 here!%%%%%(backwards)'\n					#Calculate the backwards scroll distance\n					scrollDistance = totalAmount + previousDay - currentDay\n					if scrollDistance < 0 then scrollDistance = scrollDistance * -1 #Make sure that scrollDistance is always a positive number\n					log '@@@@@@@@@@@@@@currentDay distance from previousDay@@@@@@@@@@@@@@',scrollDistance\n					for i in [0...scrollDistance]\n						window.timelineDayScroller.goToPreviousPage()\n				else\n					#No overlaps going on here, just scroll normally to get things going for the time being, I can optimize this last.\n					log 'Just scroll as normal!'\n					scrollDistance = previousDay - currentDay\n					if scrollDistance < 0 then scrollDistance = scrollDistance * -1 #Make sure that scrollDistance is always a positive number\n					if previousDay < currentDay\n						log '!!!!!!!!!!!!!currentDay distance from previousDay!(forwards)!!!!',scrollDistance\n						for i in [0...scrollDistance]\n							window.timelineDayScroller.goToNextPage()\n					else\n						log '!!!!!!!!!!!!currentDay distance from previousDay!(backwards)!!!!',scrollDistance\n						if previousDay is currentDay\n							log 'Scrolling back one to cover this edgecase!'\n							window.timelineDayScroller.goToPreviousPage()\n						else\n							log 'HURP SCROLL BACK NORMALLY'\n							for i in [0...scrollDistance]\n								window.timelineDayScroller.goToPreviousPage()\n\n						#for i in [0...scrollDistance]\n							#window.timelineDayScroller.goToPreviousPage()\n\n				#Get the Template instance\n				instance = Template.instance()###\n				#log 'AUTORUN INSTANCE',instance",
			"settings":
			{
				"buffer_size": 5982,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "FView.byId('timelineYearScroller').modifier.setTransform(Transform.scale(0,0,0),\n{\n	method: 'spring',\n	period: 500,\n	dampingRatio: 0.5\n});",
			"settings":
			{
				"buffer_size": 138,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "bloom/*\n	Three.js \"tutorials by example\"\n	Author: Lee Stemkoski\n	Date: July 2013 (three.js v59dev)\n*/\n\n// MAIN\n\n// standard global variables\nvar container, scene, camera, renderer, controls, stats;\nvar keyboard = new THREEx.KeyboardState();\nvar clock = new THREE.Clock();\n// custom global variables\nvar cube, gui;\nvar shaderActive = \"none\";\n\n// variables for shader\nvar composer, finalPass;\n\ninit();\nanimate();\n\n// FUNCTIONS 		\nfunction init() \n{\n	// SCENE\n	scene = new THREE.Scene();\n	// CAMERA\n	var SCREEN_WIDTH = window.innerWidth, SCREEN_HEIGHT = window.innerHeight;\n	var VIEW_ANGLE = 45, ASPECT = SCREEN_WIDTH / SCREEN_HEIGHT, NEAR = 0.1, FAR = 20000;\n	camera = new THREE.PerspectiveCamera( VIEW_ANGLE, ASPECT, NEAR, FAR);\n	scene.add(camera);\n	camera.position.set(0,150,400);\n	camera.lookAt(scene.position);	\n	// RENDERER\n	if ( Detector.webgl )\n		renderer = new THREE.WebGLRenderer( {antialias:true} );\n	else\n		renderer = new THREE.CanvasRenderer(); \n	renderer.setSize(SCREEN_WIDTH, SCREEN_HEIGHT);\n	container = document.getElementById( 'ThreeJS' );\n	container.appendChild( renderer.domElement );\n	// EVENTS\n	THREEx.WindowResize(renderer, camera);\n	THREEx.FullScreen.bindKey({ charCode : 'm'.charCodeAt(0) });\n	// CONTROLS\n	controls = new THREE.OrbitControls( camera, renderer.domElement );\n	// STATS\n	stats = new Stats();\n	stats.domElement.style.position = 'absolute';\n	stats.domElement.style.bottom = '0px';\n	stats.domElement.style.zIndex = 100;\n	container.appendChild( stats.domElement );\n	// LIGHT\n	var light = new THREE.PointLight(0xffffff);\n	light.position.set(0,250,0);\n	scene.add(light);\n	// FLOOR\n	var floorTexture = new THREE.ImageUtils.loadTexture( 'images/checkerboard.jpg' );\n	floorTexture.wrapS = floorTexture.wrapT = THREE.RepeatWrapping; \n	floorTexture.repeat.set( 10, 10 );\n	var floorMaterial = new THREE.MeshBasicMaterial( { map: floorTexture, side: THREE.DoubleSide } );\n	var floorGeometry = new THREE.PlaneGeometry(1000, 1000, 10, 10);\n	var floor = new THREE.Mesh(floorGeometry, floorMaterial);\n	floor.position.y = -0.5;\n	floor.rotation.x = Math.PI / 2;\n	scene.add(floor);\n	\n	// SKYBOX/FOG\n	var materialArray = [];\n	materialArray.push(new THREE.MeshBasicMaterial( { map: THREE.ImageUtils.loadTexture( 'images/dawnmountain-xpos.png' ) }));\n	materialArray.push(new THREE.MeshBasicMaterial( { map: THREE.ImageUtils.loadTexture( 'images/dawnmountain-xneg.png' ) }));\n	materialArray.push(new THREE.MeshBasicMaterial( { map: THREE.ImageUtils.loadTexture( 'images/dawnmountain-ypos.png' ) }));\n	materialArray.push(new THREE.MeshBasicMaterial( { map: THREE.ImageUtils.loadTexture( 'images/dawnmountain-yneg.png' ) }));\n	materialArray.push(new THREE.MeshBasicMaterial( { map: THREE.ImageUtils.loadTexture( 'images/dawnmountain-zpos.png' ) }));\n	materialArray.push(new THREE.MeshBasicMaterial( { map: THREE.ImageUtils.loadTexture( 'images/dawnmountain-zneg.png' ) }));\n	for (var i = 0; i < 6; i++)\n	   materialArray[i].side = THREE.BackSide;\n	var skyboxMaterial = new THREE.MeshFaceMaterial( materialArray );\n	\n	var skyboxGeom = new THREE.CubeGeometry( 5000, 5000, 5000, 1, 1, 1 );\n	\n	var skybox = new THREE.Mesh( skyboxGeom, skyboxMaterial );\n	scene.add( skybox );	\n\n	\n	////////////\n	// CUSTOM //\n	////////////\n	var cubeGeometry = new THREE.CubeGeometry( 50, 50, 50 );\n	var crateTexture = new THREE.ImageUtils.loadTexture( 'images/crate.gif' );\n	var crateMaterial = new THREE.MeshBasicMaterial( { map: crateTexture } );\n	cube = new THREE.Mesh( cubeGeometry, crateMaterial );\n	cube.position.set(-50,26,0);\n	scene.add(cube);\n	\n	var sphereGeometry = new THREE.SphereGeometry( 50, 32, 16 ); \n	var sphereMaterial = new THREE.MeshLambertMaterial( {color: 0x8888ff} ); \n	var sphere = new THREE.Mesh(sphereGeometry, sphereMaterial);\n	sphere.position.set(50, 50, -50);\n	scene.add(sphere);\n\n	\n	/////////////////////\n	// POST-PROCESSING //\n	/////////////////////\n	\n	// GUI setup\n	\n	gui = new dat.GUI();\n	\n	parameters = \n	{\n		x: 0, y: 30, z: 0,\n		sepiaAmount: 0.9,\n		vignetteOffset: 1.5, vignetteDarkness: 1.6,\n		dotscreenAngle: 0.5, dotscreenScale: 0.8,\n		bloomStrength: 1.3, bloomFactor: 1.0,\n		horizBlur: 1.25, vertiBlur: 1.25,\n		useShaderNone:      function() { setupShaderNone();      },\n		useShaderSepia:     function() { setupShaderSepia();     },\n		useShaderVignette:  function() { setupShaderVignette();  },\n		useShaderDotScreen: function() { setupShaderDotScreen(); },\n		useShaderBloom:     function() { setupShaderBloom();     },\n		useShaderBlur:      function() { setupShaderBlur();      }\n		\n	};\n	\n	gui.add( parameters, 'useShaderNone' ).name(\"Display Original Scene\");\n	\n	var folderSepia = gui.addFolder('Sepia');\n	var sepiaAmountGUI = folderSepia.add( parameters, 'sepiaAmount' ).min(0).max(1).step(0.01).name(\"Amount\").listen();\n	sepiaAmountGUI.onChange(\n		function(value)\n		{   setupShaderSepia();   }\n	);\n	folderSepia.add( parameters, 'useShaderSepia' ).name(\"Use Sepia Shader\");\n	folderSepia.open();\n	\n	var folderVignette = gui.addFolder('Vignette');\n	var vignetteOffsetGUI = folderVignette.add( parameters, 'vignetteOffset' ).min(0).max(3).step(0.01).name(\"Offset\").listen();\n	vignetteOffsetGUI.onChange(\n		function(value)\n		{   setupShaderVignette();   }\n	);\n	var vignetteDarknessGUI = folderVignette.add( parameters, 'vignetteDarkness' ).min(0).max(3).step(0.01).name(\"Darkness\").listen();\n	vignetteDarknessGUI.onChange(\n		function(value)\n		{   setupShaderVignette();   }\n	);\n	folderVignette.add( parameters, 'useShaderVignette' ).name(\"Use Vignette Shader\");\n	folderVignette.open();\n	\n	var folderDotScreen = gui.addFolder('Dot Screen');\n	var dotScreenAngleGUI = folderDotScreen.add( parameters, 'dotscreenAngle' ).min(0).max(3.14).step(0.01).name(\"Angle\").listen();\n	dotScreenAngleGUI.onChange(\n		function(value)\n		{   setupShaderDotScreen();   }\n	);\n	var dotScreenScaleGUI = folderDotScreen.add( parameters, 'dotscreenScale' ).min(0).max(2).step(0.01).name(\"Scale\").listen();\n	dotScreenScaleGUI.onChange(\n		function(value)\n		{   setupShaderDotScreen();   }\n	);\n	folderDotScreen.add( parameters, 'useShaderDotScreen' ).name(\"Use DotScreen Shader\");\n	folderDotScreen.open();\n	\n	var folderBloom = gui.addFolder('Bloom');\n	var bloomStrengthGUI = folderBloom.add( parameters, 'bloomStrength' ).min(0).max(3).step(0.01).name(\"Strength\").listen();\n	bloomStrengthGUI.onChange(\n		function(value)\n		{   setupShaderBloom();   }\n	);\n	var bloomFactorGUI = folderBloom.add( parameters, 'bloomFactor' ).min(0.1).max(2.0).step(0.01).name(\"Factor\").listen();\n	bloomFactorGUI.onChange(\n		function(value)\n		{   setupShaderBloom();   }\n	);\n	folderBloom.add( parameters, 'useShaderBloom' ).name(\"Use Bloom Shader\");\n	folderBloom.open();\n	\n	var folderBlur = gui.addFolder('Blur');\n	var horizBlurGUI = folderBlur.add( parameters, 'horizBlur' ).min(0.0).max(3.0).step(0.01).name(\"Horizontal Blur\").listen();\n	horizBlurGUI.onChange(\n		function(value)\n		{   setupShaderBlur();   }\n	);\n	var vertiBlurGUI = folderBlur.add( parameters, 'vertiBlur' ).min(0.0).max(3.0).step(0.01).name(\"Vertical Blur\").listen();\n	vertiBlurGUI.onChange(\n		function(value)\n		{   setupShaderBlur();   }\n	);\n	folderBlur.add( parameters, 'useShaderBlur' ).name(\"Use Blur Shader\");\n	folderBlur.open();\n	\n	setupShaderNone();\n	\n	\n}\n\nfunction setupShaderNone()\n{\n	shaderActive = \"none\";\n}\n\nfunction setupShaderSepia()\n{\n	composer = new THREE.EffectComposer( renderer );\n	composer.addPass( new THREE.RenderPass( scene, camera ) );\n	\n	var shaderSepia = THREE.SepiaShader;\n	var effectSepia = new THREE.ShaderPass( shaderSepia );\n	effectSepia.uniforms[ \"amount\" ].value = parameters.sepiaAmount;\n	effectSepia.renderToScreen = true;\n	composer.addPass(effectSepia);\n	shaderActive = \"sepia\";	\n}\n\nfunction setupShaderVignette()\n{\n	composer = new THREE.EffectComposer( renderer );\n	composer.addPass( new THREE.RenderPass( scene, camera ) );\n	\n	var shaderVignette = THREE.VignetteShader;\n	var effectVignette = new THREE.ShaderPass( shaderVignette );\n	// larger values = darker closer to center\n	// darkness < 1  => lighter edges\n	effectVignette.uniforms[ \"offset\" ].value = parameters.vignetteOffset;\n	effectVignette.uniforms[ \"darkness\" ].value = parameters.vignetteDarkness;\n	effectVignette.renderToScreen = true;\n	composer.addPass(effectVignette);\n	shaderActive = \"vignette\";\n}\n\nfunction setupShaderDotScreen()\n{\n	composer = new THREE.EffectComposer( renderer );\n	composer.addPass( new THREE.RenderPass( scene, camera ) );\n	\n	var effectDotScreen = new THREE.DotScreenPass( new THREE.Vector2(0,0), parameters.dotscreenAngle, parameters.dotscreenScale ); \n	effectDotScreen.renderToScreen = true; \n	composer.addPass(effectDotScreen); \n	shaderActive = \"dotscreen\";\n}\n\nfunction setupShaderBloom()\n{\n	composer = new THREE.EffectComposer( renderer );\n	composer.addPass( new THREE.RenderPass( scene, camera ) );\n	\n	// https://github.com/mrdoob/three.js/issues/1065\n	// this method changes default kernel/sigma values by the same factor\n	var effectBloom = new THREE.BloomPass( parameters.bloomStrength, parameters.bloomFactor * 25, parameters.bloomFactor * 4.0 );\n	composer.addPass( effectBloom );\n	\n	var effectCopy = new THREE.ShaderPass( THREE.CopyShader );\n	effectCopy.renderToScreen = true;\n	composer.addPass( effectCopy );\n	shaderActive = \"bloom\";\n}\n\nfunction setupShaderBlur()\n{\n	composer = new THREE.EffectComposer( renderer );\n	composer.addPass( new THREE.RenderPass( scene, camera ) );\n	\n	// http://devmaster.net/posts/3100/shader-effects-glow-bloom	\n	// http://www.neilblevins.com/cg_education/specular_bloom/specular_bloom.htm\n	var effectHorizBlur = new THREE.ShaderPass( THREE.HorizontalBlurShader );\n	var effectVertiBlur = new THREE.ShaderPass( THREE.VerticalBlurShader );\n	effectHorizBlur.uniforms[ \"h\" ].value = parameters.horizBlur / window.innerWidth;\n	effectVertiBlur.uniforms[ \"v\" ].value = parameters.vertiBlur / window.innerHeight;\n	effectVertiBlur.renderToScreen = true;\n	\n	composer.addPass( effectHorizBlur );\n	composer.addPass( effectVertiBlur );\n	shaderActive = \"blur\";\n}\n\nfunction animate() \n{\n    requestAnimationFrame( animate );\n	render();		\n	update();\n}\n\nfunction update()\n{\n	if ( keyboard.pressed(\"z\") ) \n	{ \n		// do something\n	}\n	\n	controls.update();\n	stats.update();\n}\n\nfunction render() \n{\n	if ( shaderActive == \"none\" )\n		renderer.render( scene, camera );\n	else\n		composer.render();\n}",
			"settings":
			{
				"buffer_size": 10275,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "\n\n			if ( ! Detector.webgl ) Detector.addGetWebGLMessage();\n\n			var container;\n\n			var camera, scene, renderer;\n\n			var video, texture, material, mesh;\n\n			var composer;\n\n			var mouseX = 0;\n			var mouseY = 0;\n\n			var windowHalfX = window.innerWidth / 2;\n			var windowHalfY = window.innerHeight / 2;\n\n			var cube_count,\n\n				meshes = [],\n				materials = [],\n\n				xgrid = 20,\n				ygrid = 10;\n\n			init();\n			animate();\n\n			function init() {\n\n				container = document.createElement( 'div' );\n				document.body.appendChild( container );\n\n				camera = new THREE.PerspectiveCamera( 40, window.innerWidth / window.innerHeight, 1, 10000 );\n				camera.position.z = 500;\n\n				scene = new THREE.Scene();\n\n				var light = new THREE.DirectionalLight( 0xffffff );\n				light.position.set( 0.5, 1, 1 ).normalize();\n				scene.add( light );\n\n				renderer = new THREE.WebGLRenderer( { antialias: false } );\n				renderer.setSize( window.innerWidth, window.innerHeight );\n\n				container.appendChild( renderer.domElement );\n\n				video = document.getElementById( 'video' );\n\n				texture = new THREE.VideoTexture( video );\n				texture.minFilter = THREE.LinearFilter;\n				texture.magFilter = THREE.LinearFilter;\n				texture.format = THREE.RGBFormat;\n\n				//\n\n				var i, j, ux, uy, ox, oy,\n					geometry,\n					xsize, ysize;\n\n				ux = 1 / xgrid;\n				uy = 1 / ygrid;\n\n				xsize = 480 / xgrid;\n				ysize = 204 / ygrid;\n\n				var parameters = { color: 0xffffff, map: texture };\n\n				cube_count = 0;\n\n				for ( i = 0; i < xgrid; i ++ )\n				for ( j = 0; j < ygrid; j ++ ) {\n\n					ox = i;\n					oy = j;\n\n					geometry = new THREE.BoxGeometry( xsize, ysize, xsize );\n					\n					change_uvs( geometry, ux, uy, ox, oy );\n\n					materials[ cube_count ] = new THREE.MeshLambertMaterial( parameters );\n\n					material = materials[ cube_count ];\n\n					material.hue = i/xgrid;\n					material.saturation = 1 - j/ygrid;\n\n					material.color.setHSL( material.hue, material.saturation, 0.5 );\n\n					mesh = new THREE.Mesh( geometry, material );\n\n					mesh.position.x =   ( i - xgrid/2 ) * xsize;\n					mesh.position.y =   ( j - ygrid/2 ) * ysize;\n					mesh.position.z = 0;\n\n					mesh.scale.x = mesh.scale.y = mesh.scale.z = 1;\n\n					scene.add( mesh );\n\n					mesh.dx = 0.001 * ( 0.5 - Math.random() );\n					mesh.dy = 0.001 * ( 0.5 - Math.random() );\n\n					meshes[ cube_count ] = mesh;\n\n					cube_count += 1;\n\n				}\n\n				renderer.autoClear = false;\n\n				document.addEventListener( 'mousemove', onDocumentMouseMove, false );\n\n				// postprocessing\n\n				var renderModel = new THREE.RenderPass( scene, camera );\n				var effectBloom = new THREE.BloomPass( 1.3 );\n				var effectCopy = new THREE.ShaderPass( THREE.CopyShader );\n\n				effectCopy.renderToScreen = true;\n\n				composer = new THREE.EffectComposer( renderer );\n\n				composer.addPass( renderModel );\n				composer.addPass( effectBloom );\n				composer.addPass( effectCopy );\n\n				//\n\n				window.addEventListener( 'resize', onWindowResize, false );\n\n			}\n\n			function onWindowResize() {\n\n				windowHalfX = window.innerWidth / 2;\n				windowHalfY = window.innerHeight / 2;\n\n				camera.aspect = window.innerWidth / window.innerHeight;\n				camera.updateProjectionMatrix();\n\n				renderer.setSize( window.innerWidth, window.innerHeight );\n				composer.reset();\n\n			}\n\n			function change_uvs( geometry, unitx, unity, offsetx, offsety ) {\n\n				var faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\n				for ( var i = 0; i < faceVertexUvs.length; i ++ ) {\n\n					var uvs = faceVertexUvs[ i ];\n\n					for ( var j = 0; j < uvs.length; j ++ ) {\n\n						var uv = uvs[ j ];\n\n						uv.x = ( uv.x + offsetx ) * unitx;\n						uv.y = ( uv.y + offsety ) * unity;\n\n					}\n\n				}\n\n			}\n\n\n			function onDocumentMouseMove(event) {\n\n				mouseX = ( event.clientX - windowHalfX );\n				mouseY = ( event.clientY - windowHalfY ) * 0.3;\n\n			}\n\n			//\n\n			function animate() {\n\n				requestAnimationFrame( animate );\n\n				render();\n\n			}\n\n			var h, counter = 1;\n\n			function render() {\n\n				var time = Date.now() * 0.00005;\n\n				camera.position.x += ( mouseX - camera.position.x ) * 0.05;\n				camera.position.y += ( - mouseY - camera.position.y ) * 0.05;\n\n				camera.lookAt( scene.position );\n\n				for ( i = 0; i < cube_count; i ++ ) {\n\n					material = materials[ i ];\n\n					h = ( 360 * ( material.hue + time ) % 360 ) / 360;\n					material.color.setHSL( h, material.saturation, 0.5 );\n\n				}\n\n				if ( counter % 1000 > 200 ) {\n\n					for ( i = 0; i < cube_count; i ++ ) {\n\n						mesh = meshes[ i ];\n\n						mesh.rotation.x += 10 * mesh.dx;\n						mesh.rotation.y += 10 * mesh.dy;\n\n						mesh.position.x += 200 * mesh.dx;\n						mesh.position.y += 200 * mesh.dy;\n						mesh.position.z += 400 * mesh.dx;\n\n					}\n\n				}\n\n				if ( counter % 1000 === 0 ) {\n\n					for ( i = 0; i < cube_count; i ++ ) {\n\n						mesh = meshes[ i ];\n\n						mesh.dx *= -1;\n						mesh.dy *= -1;\n\n					}\n\n				}\n\n				counter ++;\n\n				renderer.clear();\n				composer.render();\n\n			}\n\n\n		",
			"settings":
			{
				"buffer_size": 4902,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/Pawka/Developer/Experiments/team-fortress-threejs/index.html",
			"settings":
			{
				"buffer_size": 6087,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "wget -O output.rar --referer http://subs.sab.bz/ 'http://subs.sab.bz/your-link-here'\n\nwget --referer http://www.models-resource.com/ 'http://www.models-resource.com/download/8565/'",
			"settings":
			{
				"buffer_size": 180,
				"line_ending": "Unix",
				"name": "wget -O output.rar --referer http://subs.sab.bz/ '"
			}
		},
		{
			"contents": "absolute-full()\n	position absolute\n	top 0\n	right 0\n	bottom 0\n	left 0\n\n/* CSS declarations go here */\n*\n	user-select none\n	-webkit-user-select none\n	padding 0\n	margin 0\n	list-style none\n	border none\n	outline none\n	-webkit-appearance none\nhtml, body\n	margin 0\n	padding 0\n	background black\n.icon\n	absolute-full()\n	width 100%\n	height 100%\n#pFirst\n	fill #fff\n#pFirstFill\n	fill #fff\n#pLast\n	fill #fff\n#pLastFill\n	fill #fff\n#videoWrapper\n	absolute-full()\n#video\n	absolute-full()\n\n/* Hide Video Elements */\nvideo, .OT_publisher, .OT_root\n	display none!important\n\n/* Upscale canvas for performance sakes */\ncanvas\n	position absolute!important\n	top 0!important\n	right 0!important\n	bottom 0!important\n	left 0!important\n	width 100%!important\n	height 100%!important\n\n/*Temporary Styles for Testing p tag centering*/\np\n	line-height 40px\ninput\n	border none\n	outline none\n	-webkit-appearance none\n\n/* Fonts */\n@font-face\n	font-family 'ralewayextralight'\n	src url('assets/fonts/raleway-extralight-webfont.eot')\n	src url('assets/fonts/raleway-extralight-webfont.eot?#iefix') format('embedded-opentype'), url('assets/fonts/raleway-extralight-webfont.woff') format('woff'), url('assets/fonts/raleway-extralight-webfont.ttf') format('truetype'), url('assets/fonts/raleway-extralight-webfont.svg#ralewayextralight') format('svg')\n	font-weight normal\n	font-style normal\n\n@font-face\n	font-family 'ralewaythin'\n	src url('assets/fonts/raleway-thin-webfont.eot')\n	src url('assets/fonts/raleway-thin-webfont.eot?#iefix') format('embedded-opentype'), url('assets/fonts/raleway-thin-webfont.woff') format('woff'), url('assets/fonts/raleway-thin-webfont.ttf') format('truetype'), url('assets/fonts/raleway-thin-webfont.svg#ralewaythin') format('svg')\n	font-weight normal\n	font-style normal\n\n@font-face\n	font-family 'ralewaylight'\n	src url('assets/fonts/raleway-light-webfont.eot')\n	src url('assets/fonts/raleway-light-webfont.eot?#iefix') format('embedded-opentype'), url('assets/fonts/raleway-light-webfont.woff') format('woff'), url('assets/fonts/raleway-light-webfont.ttf') format('truetype'), url('assets/fonts/raleway-light-webfont.svg#ralewaylight') format('svg')\n	font-weight normal\n	font-style normal\n\n@font-face\n	font-family 'ralewayregular'\n	src url('assets/fonts/raleway-regular-webfont.eot')\n	src url('assets/fonts/raleway-regular-webfont.eot?#iefix') format('embedded-opentype'), url('assets/fonts/raleway-regular-webfont.woff') format('woff'), url('assets/fonts/raleway-regular-webfont.ttf') format('truetype'), url('assets/fonts/raleway-regular-webfont.svg#ralewayregular') format('svg')\n	font-weight normal\n	font-style normal\n\n@font-face\n	font-family 'ralewaymedium'\n	src url('assets/fonts/raleway-medium-webfont.eot')\n	src url('assets/fonts/raleway-medium-webfont.eot?#iefix') format('embedded-opentype'), url('assets/fonts/raleway-medium-webfont.woff') format('woff'), url('assets/fonts/raleway-medium-webfont.ttf') format('truetype'), url('assets/fonts/raleway-medium-webfont.svg#ralewaymedium') format('svg')\n	font-weight normal\n	font-style normal\n\n@font-face\n	font-family 'ralewaysemibold'\n	src url('assets/fonts/raleway-semibold-webfont.eot')\n	src url('assets/fonts/raleway-semibold-webfont.eot?#iefix') format('embedded-opentype'), url('assets/fonts/raleway-semibold-webfont.woff') format('woff'), url('assets/fonts/raleway-semibold-webfont.ttf') format('truetype'), url('assets/fonts/raleway-semibold-webfont.svg#ralewaysemibold') format('svg')\n	font-weight normal\n	font-style normal\n\n@font-face\n	font-family 'ralewaybold'\n	src url('assets/fonts/raleway-bold-webfont.eot')\n	src url('assets/fonts/raleway-bold-webfont.eot?#iefix') format('embedded-opentype'), url('assets/fonts/raleway-bold-webfont.woff') format('woff'), url('assets/fonts/raleway-bold-webfont.ttf') format('truetype'), url('assets/fonts/raleway-bold-webfont.svg#ralewaybold') format('svg')\n	font-weight normal\n	font-style normal\n\n@font-face\n	font-family 'ralewayextrabold'\n	src url('assets/fonts/raleway-extrabold-webfont.eot')\n	src url('assets/fonts/raleway-extrabold-webfont.eot?#iefix') format('embedded-opentype'), url('assets/fonts/raleway-extrabold-webfont.woff') format('woff'), url('assets/fonts/raleway-extrabold-webfont.ttf') format('truetype'), url('assets/fonts/raleway-extrabold-webfont.svg#ralewayextrabold') format('svg')\n	font-weight normal\n	font-style normal\n\n@font-face\n	font-family 'ralewayheavy'\n	src url('assets/fonts/raleway-heavy-webfont.eot')\n	src url('assets/fonts/raleway-heavy-webfont.eot?#iefix') format('embedded-opentype'), url('assets/fonts/raleway-heavy-webfont.woff') format('woff'), url('assets/fonts/raleway-heavy-webfont.ttf') format('truetype'), url('assets/fonts/raleway-heavy-webfont.svg#ralewayheavy') format('svg')\n	font-weight normal\n	font-style normal\n\n@font-face\n	font-family 'damier-light'\n	src url(\"../fonts/DamierLight.otf\") format('opentype')\n	font-weight normal\n	font-style normal\n\n@font-face\n	font-family 'damier-regular'\n	src url(\"../fonts/DamierRegular.otf\") format('opentype')\n	font-weight normal\n	font-style normal\n\n@font-face\n	font-family 'ziamimi-light'\n	src url(\"../fonts/ZiamimiLight.otf\") format('opentype')\n	font-weight normal\n	font-style normal\n\n@font-face\n	font-family 'ziamimi-regular'\n	src url(\"../fonts/ZiamimiRegular.otf\") format('opentype')\n	font-weight normal\n	font-style normal\n\n@font-face\n	font-family 'ziamimi-bold'\n	src url(\"../fonts/ZiamimiBold.otf\") format('opentype')\n	font-weight normal\n	font-style normal",
			"file": "moment.styl",
			"file_size": 5441,
			"file_write_time": 130630097800000000,
			"settings":
			{
				"buffer_size": 5441,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 400.0,
		"selected_items":
		[
			[
				"ja",
				"Set Syntax: JavaScript"
			],
			[
				"java",
				"Set Syntax: JavaScript"
			],
			[
				"stylus",
				"Set Syntax: Stylus"
			],
			[
				"git push",
				"Git: Push"
			],
			[
				"status",
				"Git: Status"
			],
			[
				"javascr",
				"Set Syntax: JavaScript"
			],
			[
				"git status",
				"Git: Status"
			],
			[
				"open",
				"File Navigator: Open"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			]
		],
		"width": 475.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/Pawka/Developer",
		"/Users/Pawka/Developer/Beep"
	],
	"file_history":
	[
		"/Users/Pawka/Developer/Parker/Moment/compatibility/konami.js",
		"/Users/Pawka/Developer/Beep/beephq.github.io/index.html",
		"/Users/Pawka/Developer/Experiments/team-fortress-threejs/team-fortress-threejs_files/ThreeTF2.js",
		"/Users/Pawka/Developer/Parker/Resume/css/main.css",
		"/Users/Pawka/Developer/Parker/Moment/.meteor/local/build/programs/server/node_modules/node-inspector/front-end/TimelineGrid.js",
		"/Users/Pawka/Developer/Parker/LightningGame/phaser/src/pixi/loaders/ImageLoader.js",
		"/Users/Pawka/Developer/Beep/BeepAndroid/plugins/org.apache.cordova.file/src/android/InvalidModificationException.java",
		"/Users/Pawka/Developer/Beep/BeepWebsite/img/icon-mic.svg",
		"/Users/Pawka/Developer/Beep/BeepAndroid/ionic.project",
		"/Users/Pawka/Developer/Parker/Moment/public/models/WindWakerLink/link.mtl",
		"/Users/Pawka/Developer/Parker/Moment/compatibility/THREEx/BasicLighting.js",
		"/Users/Pawka/Developer/Parker/Moment/compatibility/THREE/ColladaLoader.js",
		"/Users/Pawka/Developer/Parker/Moment/public/models/WindWakerLink/link.obj",
		"/Users/Pawka/Developer/Parker/Moment/compatibility/ThreeX/UniversalLoader.js",
		"/Users/Pawka/Developer/Parker/Moment/compatibility/ThreeX/WindowResize.js",
		"/Users/Pawka/Developer/Parker/Moment/compatibility/ThreeX/THREEx.js",
		"/Users/Pawka/Developer/Parker/Moment/compatibility/blur.js",
		"/Users/Pawka/Developer/Experiments/threejs-video-cube/scripts/main.js",
		"/Users/Pawka/Developer/Parker/Moment/konami.coffee",
		"/Users/Pawka/Developer/Experiments/threejs-video-cube/index.html",
		"/Users/Pawka/Developer/Experiments/video/index.html",
		"/Users/Pawka/Developer/Experiments/famous-lagometer/examples/demo/AppView.js",
		"/Users/Pawka/Developer/Experiments/famous-lagometer/Lagometer.js",
		"/Users/Pawka/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/Users/Pawka/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/Pawka/Developer/Experiments/famous-lagometer/examples/demo/index.html",
		"/Users/Pawka/Developer/Beep/BeepWebsite/.gitignore",
		"/Users/Pawka/Developer/Parker/Moment/packages/tokbox-meteor/server/index.js",
		"/Users/Pawka/Developer/Experiments/famous-UltraVisual/js/app/StripListView.js",
		"/Users/Pawka/Developer/Experiments/famous-UltraVisual/js/app/PageListView.js",
		"/Users/Pawka/Developer/Experiments/famous-UltraVisual/js/app/ListView.js",
		"/Users/Pawka/Developer/Experiments/famous-UltraVisual/index.html",
		"/Users/Pawka/Developer/Parker/Moment/public/assets/fonts/font-faces.css",
		"/Users/Pawka/Library/Application Support/Sublime Text 3/Packages/Stylus/Stylus.sublime-settings",
		"/Users/Pawka/Downloads/Moment-353c6a9b5ddb5aa8af97fd91dbb4d5aa87072f59/assets/css/fonts/font-faces.css",
		"/Users/Pawka/Library/Application Support/Sublime Text 3/Packages/User/Stylus.sublime-settings",
		"/Users/Pawka/Developer/Parker/Moment/moment.styl",
		"/Users/Pawka/Developer/Parker/Moment/packages/fview-kenburns/lib/post.js",
		"/Users/Pawka/Developer/Experiments/famous/examples/views/FlexibleLayout/example.js",
		"/Users/Pawka/Developer/Experiments/famous/examples/views/Deck/example.js",
		"/Users/Pawka/Developer/Parker/Logo/js/main.js",
		"/Users/Pawka/Developer/Parker/Logo/css/main.css",
		"/Users/Pawka/Developer/Parker/Logo/index.html",
		"/Users/Pawka/Developer/Beep/BeepApp/www/js/controllers.js",
		"/Users/Pawka/Developer/Beep/BeepApp/www/css/style.css",
		"/Users/Pawka/Developer/Beep/BeepApp/www/index.html",
		"/Users/Pawka/Developer/Beep/BeepApp/.gitignore",
		"/Users/Pawka/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap",
		"/Users/Pawka/Developer/Beep/BeepAndroid/config.xml"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"setDefault",
			"connected",
			"canvasPARENT",
			"canvas",
			"video",
			"videoWrapper",
			"autoru",
			"getCurrentIndex",
			"heavy",
			"//",
			"setDefault",
			"unpublish",
			"event.preve",
			"window.video =",
			"scene.remove",
			"another streamdestroyed",
			"subscribed',false",
			"window.videoCube",
			"streamDestroyed",
			"videoCube",
			"Running!",
			"unpublish",
			"25",
			"timelineMOmentStyles",
			"unpublish",
			",5",
			"5",
			"StateModifier",
			"modifierChain = ",
			"Transitionable",
			"or userIs",
			"momentButton.rendered",
			"spring",
			"autorun",
			"timelineActive",
			"momentButton",
			"dampingRatio",
			"blur",
			"setOpacity",
			"publisher",
			"raleway",
			"ralewaythin",
			"raleway",
			"  ",
			":",
			";",
			"scrollerFView",
			"timelineActive",
			"layout",
			"timelineMinuteTitle",
			"bloom'",
			"blur'",
			"scale",
			"timelineMoment",
			"'bloom'",
			"get 'bloom'",
			"parameters",
			"parameters.horizBlur",
			"composer.addPass",
			"blur",
			"setupShaderBlur",
			"useShaderBlur",
			"blur",
			"bloom'",
			"bloom.",
			"bloom",
			"Session.setDefau",
			"renderer = ",
			"window.controls",
			"window.renderer",
			"composer",
			"videoCube",
			"easterEggModel",
			"easterEggModal",
			".z =",
			"spotlight",
			"useMtl",
			"EASTEREGGMODEL",
			"postrender",
			"window.subscriber",
			"onDocument",
			"camera",
			"render(",
			"ox",
			"rect",
			"onresize = ",
			"webGL",
			"renderer",
			"context ",
			"drawImage",
			"setTimeout",
			"20",
			"postrender",
			"output",
			"ppLogoTranslation",
			"ppLogo",
			"setDefaul",
			"getImgData",
			"layout()",
			"session.publish",
			"userIsPublishing",
			"publishing",
			"end",
			"bottom",
			"publishing",
			"helpers",
			"uhhh else",
			"Nope!",
			"momentButtonTranslation",
			"momentButton",
			"render()",
			"render",
			"init",
			"window.context",
			"stroke()",
			"backgroundColor",
			"render",
			"canvasSurface",
			"Lagometer",
			"ppLogo",
			"createOpenTokSession'",
			".call",
			"call",
			"createMoment",
			"method",
			"canvas ",
			"canvas",
			"layout()"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "moment.jade",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7284,
						"regions":
						{
						},
						"selection":
						[
							[
								584,
								465
							]
						],
						"settings":
						{
							"syntax": "Packages/Jade/Syntaxes/Jade.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 174.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6147,
						"regions":
						{
						},
						"selection":
						[
							[
								3624,
								3624
							]
						],
						"settings":
						{
							"auto_name": "",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 2,
					"file": "moment.coffee",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 65312,
						"regions":
						{
						},
						"selection":
						[
							[
								13868,
								13868
							]
						],
						"settings":
						{
							"syntax": "Packages/Better CoffeeScript/CoffeeScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 7785.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1443,
						"regions":
						{
						},
						"selection":
						[
							[
								1438,
								1326
							]
						],
						"settings":
						{
							"syntax": "Packages/Better CoffeeScript/CoffeeScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 4,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2783,
						"regions":
						{
						},
						"selection":
						[
							[
								2783,
								2783
							]
						],
						"settings":
						{
							"syntax": "Packages/Better CoffeeScript/CoffeeScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": -0.0,
						"translation.y": 274.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 5,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3131,
						"regions":
						{
						},
						"selection":
						[
							[
								3131,
								3131
							]
						],
						"settings":
						{
							"auto_name": "https://www.youtube.com/watch?v=vw5_YyM4hn8",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 376.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 6,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2941,
						"regions":
						{
						},
						"selection":
						[
							[
								2941,
								2941
							]
						],
						"settings":
						{
							"syntax": "Packages/Better CoffeeScript/CoffeeScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 7,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5982,
						"regions":
						{
						},
						"selection":
						[
							[
								5982,
								5982
							]
						],
						"settings":
						{
							"syntax": "Packages/Better CoffeeScript/CoffeeScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1940.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 8,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 138,
						"regions":
						{
						},
						"selection":
						[
							[
								138,
								138
							]
						],
						"settings":
						{
							"syntax": "Packages/Better CoffeeScript/CoffeeScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 9,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10275,
						"regions":
						{
						},
						"selection":
						[
							[
								9713,
								9723
							]
						],
						"settings":
						{
							"auto_name": "",
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4778.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 10,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4902,
						"regions":
						{
						},
						"selection":
						[
							[
								2825,
								2827
							]
						],
						"settings":
						{
							"auto_name": "",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2147.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "/Users/Pawka/Developer/Experiments/team-fortress-threejs/index.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6087,
						"regions":
						{
						},
						"selection":
						[
							[
								5454,
								5454
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1367.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 12,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 180,
						"regions":
						{
						},
						"selection":
						[
							[
								180,
								180
							]
						],
						"settings":
						{
							"auto_name": "wget -O output.rar --referer http://subs.sab.bz/ '",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 13,
					"file": "moment.styl",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5441,
						"regions":
						{
						},
						"selection":
						[
							[
								4335,
								4335
							]
						],
						"settings":
						{
							"syntax": "Packages/Stylus/Stylus.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1700.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			],
			[
				2,
				0,
				3,
				1
			]
		],
		"cols":
		[
			0.0,
			0.33,
			0.66,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git-commit":
	{
		"height": 110.0
	},
	"output.git-push":
	{
		"height": 110.0
	},
	"project": "Moment.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"",
				"~/Developer/Beep/BeepWebsite/BeepWebsite.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 143.0,
	"status_bar_visible": false,
	"template_settings":
	{
	}
}
