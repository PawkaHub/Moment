{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"sub",
				"subscriber"
			],
			[
				"tran",
				"transparent"
			],
			[
				"text",
				"textAlign"
			],
			[
				"ralr",
				"raleway-extralight-webfont"
			],
			[
				"des",
				"destinationY"
			],
			[
				"desit",
				"destinationX"
			],
			[
				"timelineMomentBack",
				"timelineMomentBackgroundHeight"
			],
			[
				"timelineMOmnt",
				"timelineMomentBackgroundWidth"
			],
			[
				"pan",
				"panTransition"
			],
			[
				"zoom",
				"zoomTransition"
			],
			[
				"fv",
				"fviewId"
			],
			[
				"timelineMinu",
				"timelineMinuteScroller"
			],
			[
				"tokboxA",
				"tokboxArchiveName"
			],
			[
				"tokboxAr",
				"tokboxArchiveId"
			]
		]
	},
	"buffers":
	[
		{
			"file": "moment.jade",
			"settings":
			{
				"buffer_size": 10080,
				"line_ending": "Unix"
			}
		},
		{
			"file": "moment.coffee",
			"settings":
			{
				"buffer_size": 70478,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "//TODO: Find canvas from Meteor/Famous instead of DOM\nvar canvasElement = document.querySelector('canvas');\n\n//Initialize a ThreeJS scene in the Famo.us canvas\nvar renderer = new THREE.WebGLRenderer({\n	canvas: window.canvas._currentTarget,\n	antialias: true,\n	devicePixelRatio: window.devicePixelRatio,\n	context: window.context\n});\n\n//Set the renderer size (May not be needed?)\nrenderer.setSize(640,480);\n\n\nvar scene = new THREE.Scene();\n\n        var camera = new THREE.PerspectiveCamera(\n            35,             // Field of view\n            800 / 600,      // Aspect ratio\n            0.1,            // Near plane\n            10000           // Far plane\n        );\n        camera.position.set( -15, 10, 10 );\n        camera.lookAt( scene.position );\n\n        var geometry = new THREE.CubeGeometry( 5, 5, 5 );\n        var material = new THREE.MeshLambertMaterial( { color: 0xFF0000 } );\n        var mesh = new THREE.Mesh( geometry, material );\n        scene.add( mesh );\n\n        var light = new THREE.PointLight( 0xFFFF00 );\n        light.position.set( 10, 0, 10 );\n        scene.add( light );\n\n        renderer.render( scene, camera );\n\n\n\n\n\n//Initialize a ThreeJS scene in the Famo.us canvas\nvar renderer = new THREE.WebGLRenderer({\n    canvas: window.canvas._currentTarget,\n    antialias: true,\n    devicePixelRatio: window.devicePixelRatio,\n    context: window.context\n});\n\n//Set the renderer size (May not be needed?)\nrenderer.setSize(640,480);\n\n//Create a THREE.JS scene\nvar scene = new THREE.Scene();\n\n//Create a camera\nvar camera = new THREE.PerspectiveCamera(\n	35, //Field of View\n	640/480, //Aspect Ratio\n	0.1, //Near Plane\n	10000 //Far Plane\n);\ncamera.position.set( -15, 10, 10 );\ncamera.lookAt ( scene.position );\n\n//Create some geometry to view\nvar geometry = new THREE.CubeGeometry( 5, 5, 5 );\nvar material = new THREE.MeshLambertMaterial({ color: 0xFF0000 });\nvar mesh = new THREE.Mesh ( geometry, material );\nscene.add( mesh );\n\n//Create a light\nvar light = new THREE.PointLight( 0xFF0000 );\nlight.position.set( 10, 0, 10 );\nscene.add( light );\n\n//Render it\nrenderer.render( scene, camera );\n\nvideo = document.querySelector('video');\nvideoTexture = new THREE.Texture(video);\n\n\n//Rotating cube scene",
			"settings":
			{
				"buffer_size": 2219,
				"line_ending": "Unix",
				"name": "//TODO: Find canvas from Meteor/Famous instead of"
			}
		},
		{
			"contents": "6a6462 -> 333\n\nbab8b7 -> 666",
			"settings":
			{
				"buffer_size": 28,
				"line_ending": "Unix",
				"name": "6a6462 -> 333"
			}
		},
		{
			"contents": "i = 0\n\nblur = function() {\n	if (i < 100) {\n		i+= 7\n		Session.set('blur',i)\n		setTimeout(blur);\n	} else {\n		clearTimeout(blur);\n		console.log('Blurred!');\n	}\n}\nblur();\n\nunblur = function() {\n	if (i > 0) {\n		i-= 7\n		Session.set('blur',i)\n		setTimeout(unblur);\n	} else {\n		clearTimeout(unblur);\n		console.log('Unblurred!');\n	}\n}\nunblur();\n\n\n",
			"settings":
			{
				"buffer_size": 338,
				"line_ending": "Unix",
				"name": "i = 0"
			}
		},
		{
			"file": "compatibility/blur.js",
			"settings":
			{
				"buffer_size": 17181,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "size = FView.mainCtx.getSize()\ncanvasSize = [size[0] * 2, size[1] * 2];\nwindow.canvas.setSize(size, canvasSize);",
			"settings":
			{
				"buffer_size": 112,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "var context = this.canvas.getContext('2d');\nvar size = this.getSize();\nvar canvasSize = [size[0] * 2, size[1] * 2];\nthis.canvas.setSize(size, canvasSize);\n\n// Do canvas drawing here...\ncontext.clearRect(0, 0, canvasSize[0], canvasSize[1]);\ncontext.fillStyle = this.options.backgroundColor;\ncontext.fillRect(0, 0, canvasSize[0], canvasSize[1]);\ncontext.lineWidth = 1;\ncontext.strokeStyle = this.options.borderColor;\ncontext.strokeRect(0, 0, canvasSize[0], canvasSize[1]);\n...\n\n// Call super\nreturn this._node.render();\n\n\n\n// Output to Canvas\n\n// Prepare\nsize = window.canvas.getSize()\ncanvasSize = [size[0] * 2, size [1] * 2];\nwindow.canvas.setSize(size, canvasSize);\n\n// Clear Background\n//window.context.clearRect(0,0,canvasSize[0],canvasSize[1]);\nwindow.context.fillStyle = 'red';\nwindow.context.fillRect(20,20,150,200);\n/*window.context.lineWidth = 1;\nwindow.context.strokeStyle = 'green'\nwindow.context.strokeRect(0,0,canvasSize[0],canvasSize[1]);*/\n\n//window.canvasParent.render()\n\n// Works\n\n// Prepare\nsize = window.canvas.getSize()\ncanvasSize = [size[0] * 2, size [1] * 2];\nwindow.canvas.setSize(size, canvasSize);\ncontext = window.canvas.getContext('2d');\n\n// Draw\ncontext.fillStyle = 'red';\ncontext.fillRect(20,20,150,200);\n\n\n// Doesn't work\n\n// Prepare\nsize = window.canvas.getSize()\ncanvasSize = [size[0] * 2, size[1] * 2];\nwindow.canvas.setSize(size, canvasSize);\n\n// Draw\nwindow.context.fillStyle = 'blue';\nwindow.context.fillRect(400,20,150,200);\n\n\n\n// Works with Delay\n// Draw\nsize = window.canvas.getSize()\ncanvasSize = [size[0] * 2, size[1] * 2];\nwindow.context.clearRect(0,0,canvasSize[0],canvasSize[1]);\nwindow.context.fillStyle = 'blue';\nwindow.context.fillRect(400,20,150,200);\n\n\n###setTimeout(->\n    # Set canvas size\n    size = window.canvas.getSize()\n    canvasSize = [size[0] * 2, size[1] * 2];\n    window.canvas.setSize(size, canvasSize);\n\n    # Get the context\n    window.context = window.canvas.getContext('2d')\n    log 'context!!!',window.context\n, 20)###\n\n\nvideo = document.querySelector('video');\n\nvideo.addEventListener('play', function(){\n    console.log('Streaming!');\n},false);",
			"settings":
			{
				"buffer_size": 2112,
				"line_ending": "Unix"
			}
		},
		{
			"file": "moment.styl",
			"settings":
			{
				"buffer_size": 4756,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 273.0,
		"selected_items":
		[
			[
				"java",
				"Set Syntax: JavaScript"
			],
			[
				"stylus",
				"Set Syntax: Stylus"
			],
			[
				"git push",
				"Git: Push"
			],
			[
				"status",
				"Git: Status"
			],
			[
				"javascr",
				"Set Syntax: JavaScript"
			],
			[
				"git status",
				"Git: Status"
			],
			[
				"open",
				"File Navigator: Open"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			]
		],
		"width": 457.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/Pawka/Developer",
		"/Users/Pawka/Developer/Beep"
	],
	"file_history":
	[
		"/Users/Pawka/Developer/Experiments/famous-lagometer/examples/demo/AppView.js",
		"/Users/Pawka/Developer/Experiments/famous-lagometer/Lagometer.js",
		"/Users/Pawka/Developer/Parker/Moment/compatibility/blur.js",
		"/Users/Pawka/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/Users/Pawka/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/Pawka/Developer/Experiments/famous-lagometer/examples/demo/index.html",
		"/Users/Pawka/Developer/Beep/BeepWebsite/.gitignore",
		"/Users/Pawka/Developer/Parker/Moment/packages/tokbox-meteor/server/index.js",
		"/Users/Pawka/Developer/Experiments/famous-UltraVisual/js/app/StripListView.js",
		"/Users/Pawka/Developer/Experiments/famous-UltraVisual/js/app/PageListView.js",
		"/Users/Pawka/Developer/Experiments/famous-UltraVisual/js/app/ListView.js",
		"/Users/Pawka/Developer/Experiments/famous-UltraVisual/index.html",
		"/Users/Pawka/Developer/Parker/Moment/public/assets/fonts/font-faces.css",
		"/Users/Pawka/Library/Application Support/Sublime Text 3/Packages/Stylus/Stylus.sublime-settings",
		"/Users/Pawka/Downloads/Moment-353c6a9b5ddb5aa8af97fd91dbb4d5aa87072f59/assets/css/fonts/font-faces.css",
		"/Users/Pawka/Library/Application Support/Sublime Text 3/Packages/User/Stylus.sublime-settings",
		"/Users/Pawka/Developer/Parker/Moment/moment.styl",
		"/Users/Pawka/Developer/Parker/Moment/packages/fview-kenburns/lib/post.js",
		"/Users/Pawka/Developer/Experiments/famous/examples/views/FlexibleLayout/example.js",
		"/Users/Pawka/Developer/Experiments/famous/examples/views/Deck/example.js",
		"/Users/Pawka/Developer/Parker/Logo/js/main.js",
		"/Users/Pawka/Developer/Parker/Logo/css/main.css",
		"/Users/Pawka/Developer/Parker/Logo/index.html",
		"/Users/Pawka/Developer/Beep/BeepApp/www/js/controllers.js",
		"/Users/Pawka/Developer/Beep/BeepApp/www/css/style.css",
		"/Users/Pawka/Developer/Beep/BeepApp/www/index.html",
		"/Users/Pawka/Developer/Beep/BeepApp/.gitignore",
		"/Users/Pawka/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap",
		"/Users/Pawka/Developer/Beep/BeepAndroid/config.xml"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"context ",
			"drawImage",
			"setTimeout",
			"20",
			"postrender",
			"output",
			"ppLogoTranslation",
			"ppLogo",
			"setDefaul",
			"getImgData",
			"layout()",
			"session.publish",
			"userIsPublishing",
			"publishing",
			"end",
			"bottom",
			"publishing",
			"helpers",
			"uhhh else",
			"Nope!",
			"momentButtonTranslation",
			"momentButton",
			"render()",
			"render",
			"init",
			"window.context",
			"stroke()",
			"backgroundColor",
			"render",
			"canvasSurface",
			"Lagometer",
			"ppLogo",
			"createOpenTokSession'",
			".call",
			"call",
			"createMoment",
			"method",
			"canvas ",
			"canvas",
			"layout()",
			"context = ",
			"+ContainerSurface template='timelineMoment' size='[320,180]' origin='[0,0]' align='[0,0]'",
			"computation",
			"timelineActive",
			"scale(",
			"setDefault '",
			"clicked",
			"overlayStyles",
			"#000000",
			"timelineYearStyles",
			"timelineMOnthStyles",
			"timelineMOmentStyles",
			"url('",
			"tabs",
			"2",
			"x",
			"info",
			"timelineMomentStyles",
			"timeline moment clicked",
			"imageSurface",
			"timelineMOment",
			"hovered",
			"VM546:5 ",
			"lineHeight",
			"backgroundImage",
			"size='[360",
			"timelineMOments",
			"moments: ->",
			"moment: ->",
			"moments"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "moment.jade",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10080,
						"regions":
						{
						},
						"selection":
						[
							[
								1027,
								1027
							]
						],
						"settings":
						{
							"syntax": "Packages/Jade/Syntaxes/Jade.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				}
			]
		},
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 1,
					"file": "moment.coffee",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 70478,
						"regions":
						{
						},
						"selection":
						[
							[
								4608,
								4608
							]
						],
						"settings":
						{
							"syntax": "Packages/Better CoffeeScript/CoffeeScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2145.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 2,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2219,
						"regions":
						{
						},
						"selection":
						[
							[
								1382,
								1382
							]
						],
						"settings":
						{
							"auto_name": "//TODO: Find canvas from Meteor/Famous instead of",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 257.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 28,
						"regions":
						{
						},
						"selection":
						[
							[
								28,
								28
							]
						],
						"settings":
						{
							"auto_name": "6a6462 -> 333",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 4,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 338,
						"regions":
						{
						},
						"selection":
						[
							[
								338,
								338
							]
						],
						"settings":
						{
							"auto_name": "i = 0",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "compatibility/blur.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17181,
						"regions":
						{
						},
						"selection":
						[
							[
								11580,
								11580
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 739.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 6,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 112,
						"regions":
						{
						},
						"selection":
						[
							[
								112,
								112
							]
						],
						"settings":
						{
							"syntax": "Packages/Better CoffeeScript/CoffeeScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 7,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2112,
						"regions":
						{
						},
						"selection":
						[
							[
								2112,
								2112
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 781.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 8,
					"file": "moment.styl",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4756,
						"regions":
						{
						},
						"selection":
						[
							[
								394,
								394
							]
						],
						"settings":
						{
							"syntax": "Packages/Stylus/Stylus.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			],
			[
				2,
				0,
				3,
				1
			]
		],
		"cols":
		[
			0.0,
			0.33,
			0.66,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git-commit":
	{
		"height": 110.0
	},
	"output.git-push":
	{
		"height": 110.0
	},
	"project": "Moment.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"",
				"~/Developer/Beep/BeepWebsite/BeepWebsite.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 143.0,
	"status_bar_visible": false,
	"template_settings":
	{
	}
}
