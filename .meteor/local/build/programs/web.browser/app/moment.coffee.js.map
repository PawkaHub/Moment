)]}'
{"version":3,"file":"/moment.coffee.js","sources":["moment.coffee"],"names":[],"mappings":"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","sourcesContent":["Router.configure\n\tlayoutTemplate: 'layout'\n\nRouter.map ->\n\t@route 'about',\n\t\tpath: '/'\n\n@Publisher = new Mongo.Collection 'publisher'\n@Questions = new Mongo.Collection 'questions'\n@Moments = new Mongo.Collection 'moments'\n@Archives = new Mongo.Collection 'archives'\n@Seconds = new Mongo.Collection 'seconds'\n\n# API Keys\n@openTokApiKey = '45020262'\n@momentTimer = 5\n\n@log = ->\n\tlog.history = log.history or [] # store logs to an array for reference\n\tlog.history.push arguments\n\tconsole.log Array::slice.call(arguments)  if @console\n\nif Meteor.isClient\n\tMeteor.startup ->\n\t\t#Set famous logging to be more calm\n\t\tLogger.setLevel 'famous-views', 'info'\n\n\t\t# Create a guest user\n\t\tGuests.add()\n\t\tMeteor.call('createOpenTokSession', (err,result)->\n\t\t\tif err\n\t\t\t\tlog 'createOpenTokSession err',err\n\t\t\telse\n\t\t\t\t# Initialize the session\n\t\t\t\t#log 'createOpenTokSession result',result\n\t\t\t\t@session = OT.initSession result.apiKey, result.session\n\t\t\t\t#log 'session',session\n\n\t\t\t\tsession.on 'streamCreated', (event) ->\n\t\t\t\t\tlog 'Another streamCreated!',event\n\t\t\t\t\tif window.publisher\n\t\t\t\t\t\tsession.unpublish window.publisher\n\n\t\t\t\t\twindow.subscriber = session.subscribe event.stream, 'video',\n\t\t\t\t\t\tinsertMode: 'replace'\n\t\t\t\t\t\tresolution: '1280x720'\n\t\t\t\t\t, (err) ->\n\t\t\t\t\t\tif err\n\t\t\t\t\t\t\tlog 'Subscribe err',err\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tlog 'Subscribed to stream!'\n\n\t\t\t\t\tlayout()\n\n\t\t\t\tsession.on 'streamDestroyed', (event) ->\n\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\tlog 'Another streamDestroyed!',event\n\n\t\t\t\t# Connect to the session\n\t\t\t\tsession.connect result.token, (err) ->\n\t\t\t\t\tif err\n\t\t\t\t\t\tlog 'session connect err',err\n\t\t\t\t\telse\n\t\t\t\t\t\t#log 'Connected to session!'\n\t\t\t\t\t\tif session.capabilities.publish is 1\n\t\t\t\t\t\t\t#log 'User is capable of publishing!',session.capabilities\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tlog 'You are not able to publish a stream'\n\t\t)\n\n\t\t# Famous Globals\n\t\t@Transform = famous.core.Transform\n\n\t\t# Transitions\n\t\t@Transitionable = famous.transitions.Transitionable\n\t\t@SpringTransition = famous.transitions.SpringTransition\n\t\t@SnapTransition = famous.transitions.SnapTransition\n\n\t\t# Register Transitions\n\t\tTransitionable.registerMethod 'spring',SpringTransition\n\t\tTransitionable.registerMethod 'snap',SpringTransition\n\n\t\t#Default Session States\n\t\tSession.setDefault 'backgroundTranslation', 0\n\t\tSession.setDefault 'overlayTranslation', 0\n\t\tSession.setDefault 'introTranslation', 0\n\t\tSession.setDefault 'momentButtonTranslation', 0\n\t\tSession.setDefault 'ppLogoTranslation', -10\n\t\tSession.setDefault 'timerTranslation', 300\n\t\tSession.setDefault 'questionTranslation', -200\n\t\tSession.setDefault 'timelineToggleTranslation', -10\n\t\tSession.setDefault 'canSubscribeToStream', false\n\t\tSession.setDefault 'userCanPublish', false\n\t\tSession.setDefault 'userIsPublishing', false\n\t\tSession.setDefault 'timer', momentTimer\n\t\tSession.setDefault 'now', TimeSync.serverTime()\n\n\t\t#Global Template Helpers\n\t\tTemplate.registerHelper 'minutes', ->\n\t\t\t#Create all the minutes in a day\n\t\t\tepoch = TimeSync.serverTime()\n\t\t\tminutesInADay = 40\n\t\t\tminutes = []\n\t\t\twhile minutes.length < minutesInADay\n\t\t\t\tmomentMinute = moment(epoch)\n\t\t\t\t#Create a minute object that stores the index for scrolling, as well as the moment minute.\n\t\t\t\tminute =\n\t\t\t\t\tindex: minutes.length\n\t\t\t\t\tmomentMinute: momentMinute\n\t\t\t\t#Overflow the minutes count based on the length, moment will smartly handle formatting it properly\n\t\t\t\tminute.momentMinute.set('minute',minutes.length)\n\t\t\t\t#Pass in the minute formatted to display as 10:00 AM, etc.\n\t\t\t\tminute.formattedMinute = minute.momentMinute.format('h:mm A')\n\t\t\t\tminutes.push(minute)\n\t\t\t#log 'minutes',minutes\n\t\t\tminutes\n\t\tTemplate.registerHelper 'days', ->\n\t\t\tepoch = TimeSync.serverTime()\n\t\t\tday = moment(epoch)\n\t\t\tcurrentDay = day.day()\n\t\t\tdaysInAMonth = 40\n\t\t\tdays = []\n\t\t\twhile days.length < daysInAMonth\n\t\t\t\t#log 'currentDay',currentDay\n\t\t\t\tmomentDay = moment(epoch)\n\t\t\t\tday =\n\t\t\t\t\tindex: days.length\n\t\t\t\t\tmomentDay: momentDay\n\t\t\t\tday.momentDay.set('day',currentDay--)\n\t\t\t\t#log 'day',day\n\t\t\t\tday.formattedDay = day.momentDay.format('dddd')\n\t\t\t\tdays.push(day)\n\t\t\tdays\n\t\tTemplate.registerHelper 'months', ->\n\t\t\tepoch = TimeSync.serverTime()\n\t\t\tmonth = moment(epoch)\n\t\t\tcurrentMonth = month.month()\n\t\t\tmonthsInAYear = 40\n\t\t\tmonths = []\n\t\t\twhile months.length < monthsInAYear\n\t\t\t\tmomentMonth = moment(epoch)\n\t\t\t\tmonth =\n\t\t\t\t\tindex: months.length\n\t\t\t\t\tmomentMonth: momentMonth\n\t\t\t\t#log 'currentMonth',currentMonth\n\t\t\t\tmonth.momentMonth.set('month',currentMonth--)\n\t\t\t\t#log 'month',month\n\t\t\t\tmonth.formattedMonth = month.momentMonth.format('MMMM')\n\t\t\t\tmonths.push(month)\n\t\t\t#log 'months',months\n\t\t\tmonths\n\t\tTemplate.registerHelper 'years', ->\n\t\t\tepoch = TimeSync.serverTime()\n\t\t\tyear = moment(epoch)\n\t\t\tcurrentYear = year.year()\n\t\t\tyears = []\n\t\t\tyearsSinceEpoch = 40\n\t\t\twhile years.length < yearsSinceEpoch\n\t\t\t\t#log 'currentYear',currentYear\n\t\t\t\tmomentYear = moment(epoch)\n\t\t\t\tyear =\n\t\t\t\t\tindex: years.length\n\t\t\t\t\tmomentYear: momentYear\n\t\t\t\tyear.momentYear.set('year',currentYear--)\n\t\t\t\t#log 'year',year\n\t\t\t\tyear.formattedYear = year.momentYear.format('YYYY')\n\t\t\t\tyears.push(year)\n\t\t\t#log 'years',years\n\t\t\tyears\n\t\tTemplate.registerHelper 'timelineMoments', ->\n\t\t\tinstance = Template.instance()\n\t\t\tdata = instance.data\n\t\t\t#moments = [1,2,3,4,5,6,7]\n\t\t\t#moments\n\t\t\tMoments.find()\n\t\tTemplate.registerHelper 'currentEpoch', ->\n\t\t\tTimeSync.serverTime()\n\n\t\tTemplate.about.helpers\n\t\t\tbackgroundStyles: ->\n\t\t\t\tstyles =\n\t\t\t\t\tbackgroundColor: '#f5f5f5'\n\t\t\t\t\tbackgroundImage: 'url(img/performers/01.jpg)'\n\t\t\t\t\tbackgroundRepeat: 'no-repeat'\n\t\t\t\t\tbackgroundPosition: '50% 50%'\n\t\t\t\t\tbackgroundSize: 'cover'\n\t\t\toverlayStyles: ->\n\t\t\t\tstyles =\n\t\t\t\t\tbackgroundColor: '#000000'\n\t\t\tintroStyles: ->\n\t\t\t\tstyles =\n\t\t\t\t\t#backgroundColor: '#e5e5e5'\n\t\t\t\t\ttextAlign: 'center'\n\t\t\t\t\tcolor: '#ffffff'\n\t\t\tmomentButtonStyles: ->\n\t\t\t\tstyles =\n\t\t\t\t\tborder: '1px solid #ffffff'\n\t\t\t\t\ttextAlign: 'center'\n\t\t\t\t\tcolor: '#ffffff'\n\t\t\t\t\tlineHeight: '40px'\n\t\t\tppLogoStyles: ->\n\t\t\t\tstyles = {}\n\t\t\ttimerStyles: ->\n\t\t\t\t#backgroundColor: '#dddddd'\n\t\t\t\ttextAlign: 'center'\n\t\t\t\tcolor: '#ffffff'\n\t\t\tquestionStyles: ->\n\t\t\t\t#backgroundColor: '#666666'\n\t\t\t\ttextAlign: 'center'\n\t\t\t\tcolor: '#ffffff'\n\t\t\ttimelineToggleStyles: ->\n\t\t\t\tbackgroundColor: '#ffffff'\n\t\t\t\tborderRadius: '50%'\n\t\t\t\ttextAlign: 'center'\n\t\t\t\tcolor: '#ffffff'\n\t\t\ttimelineMomentStyles: ->\n\t\t\t\ttextAlign: 'center'\n\t\t\t\tcolor: '#ffffff'\n\t\t\ttimelineOverlayStyles: ->\n\t\t\t\tbackgroundColor: '#000000'\n\n\t\t#Template.views_Scrollview.rendered = ->\n\t\t#\tlog 'SCROLLVIEW RENDERED'\n\n\t\tTemplate.about.rendered = ->\n\t\t\t#log 'ABOUT RENDERED',this\n\t\t\tfview = FView.from(this)\n\t\t\t#log 'ABOUT FVIEW',fview\n\t\t\ttarget = fview.surface || fview.view._eventInput\n\t\t\t#log 'ABOUT TARGET',target\n\n\t\t\ttarget.on('start', () ->\n\t\t\t\tlog 'STARTING!!!!!!'\n\t\t\t)\n\t\t\ttarget.on('update', () ->\n\t\t\t\tlog 'UPDATING!!!!'\n\t\t\t)\n\t\t\ttarget.on('end', () ->\n\t\t\t\tlog 'ENDING!!!!!!!'\n\t\t\t)\n\n\t\tTemplate.background.rendered = ->\n\t\t\tfview = FView.from(this)\n\n\t\t\tlog 'Set videoWrapper layout!'\n\t\t\tvideoWrapper = this.find '#videoWrapper'\n\t\t\tlog 'videoWrapper',videoWrapper\n\t\t\twindow.layout = TB.initLayoutContainer(videoWrapper,\n\t\t\t\tbigFixedRatio: false\n\t\t\t).layout\n\t\t\tlog 'layout',layout\n\n\t\t\t# Recalculate layout on resize\n\t\t\twindow.onresize = ->\n\t\t\t\tclearTimeout resizeTimeout\n\t\t\t\tresizeTimeout = setTimeout(->\n\t\t\t\t\tlog 'Layouting'\n\t\t\t\t\tlayout()\n\t\t\t\t, 20)\n\n\t\t\ttarget = fview.surface || fview.view._eventInput\n\t\t\ttarget.on('click', () ->\n\t\t\t\tlog 'TARGET CLICKED',fview, target\n\n\t\t\t\tif Session.equals 'backgroundTranslation', 0 then Session.set 'backgroundTranslation', 300 else Session.set 'backgroundTranslation', 0\n\n\t\t\t\tfview.modifier.halt()\n\t\t\t\tfview.modifier.setTransform Transform.translate(0, Session.get 'backgroundTranslation'),\n\t\t\t\t\tmethod: 'spring'\n\t\t\t\t\tperiod: 1000\n\t\t\t\t\tdampingRatio: 0.3\n\t\t\t)\n\n\t\tTemplate.overlay.rendered = ->\n\t\t\tfview = FView.from(this)\n\n\t\t\ttarget = fview.surface || fview.view._eventInput\n\t\t\ttarget.on('click', () ->\n\t\t\t\tlog 'TARGET CLICKED',fview, target\n\n\t\t\t\tif Session.equals 'overlayTranslation', 0 then Session.set 'overlayTranslation', 500 else Session.set 'overlayTranslation', 0\n\n\t\t\t\tfview.modifier.halt()\n\t\t\t\tfview.modifier.setTransform Transform.translate(0, Session.get 'overlayTranslation'),\n\t\t\t\t\tmethod: 'spring'\n\t\t\t\t\tperiod: 1000\n\t\t\t\t\tdampingRatio: 0.3\n\t\t\t)\n\n\t\tTemplate.intro.rendered = ->\n\t\t\tfview = FView.from(this)\n\n\t\t\ttarget = fview.surface || fview.view._eventInput\n\t\t\ttarget.on('click', () ->\n\t\t\t\tlog 'TARGET CLICKED',fview, target\n\n\t\t\t\tif Session.equals 'introTranslation', 0 then Session.set 'introTranslation', 150 else Session.set 'introTranslation', 0\n\n\t\t\t\tfview.modifier.halt()\n\t\t\t\tfview.modifier.setTransform Transform.translate(0, Session.get 'introTranslation'),\n\t\t\t\t\tmethod: 'spring'\n\t\t\t\t\tperiod: 1000\n\t\t\t\t\tdampingRatio: 0.3\n\t\t\t)\n\n\t\tTemplate.momentButton.rendered = ->\n\t\t\tfview = FView.from(this)\n\n\t\t\ttarget = fview.surface || fview.view._eventInput\n\t\t\ttarget.on('click', () ->\n\t\t\t\tlog 'TARGET CLICKED',fview, target\n\n\t\t\t\t#Set up the session connection\n\t\t\t\tif session.capabilities.publish is 1\n\t\t\t\t\tlog 'User can publish!'\n\t\t\t\t\twindow.publisher = OT.initPublisher('video',\n\t\t\t\t\t\tinsertMode: 'replace'\n\t\t\t\t\t\tresolution: '1280x720'\n\t\t\t\t\t)\n\n\t\t\t\t\tpublisher.on\n\t\t\t\t\t\tstreamCreated: (event) ->\n\t\t\t\t\t\t\tlog 'publishStream created!',event\n\t\t\t\t\t\t\tMeteor.call('createMoment', (err,result)->\n\t\t\t\t\t\t\t\tif err\n\t\t\t\t\t\t\t\t\tlog 'createMoment err',err\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tlog 'createMoment result',result\n\t\t\t\t\t\t\t\t\t#Start the timer once we get a result back from the server and know an archive is going!\n\n\t\t\t\t\t\t\t\t\t#We should also insert the archive result instance back into the moments/archive collection here.\n\t\t\t\t\t\t\t\t\t#(We create an archive instance here, although perhaps it might be good to either insert it upon\n\t\t\t\t\t\t\t\t\t#archive completion, so that we only insert archives that are a minute long(?) or to ensure we have\n\t\t\t\t\t\t\t\t\t#the right metadata.)\n\t\t\t\t\t\t\t\t\tarchive =\n\t\t\t\t\t\t\t\t\t\tarchiveCreatedAt: result.createdAt\n\t\t\t\t\t\t\t\t\t\tduration: result.duration\n\t\t\t\t\t\t\t\t\t\ttokboxArchiveId: result.id\n\t\t\t\t\t\t\t\t\t\ttokboxArchiveName: result.name\n\t\t\t\t\t\t\t\t\t\ttokboxPartnerId: result.partnerId\n\t\t\t\t\t\t\t\t\t\ttokboxSessionId: result.sessionId\n\t\t\t\t\t\t\t\t\t\tarchiveSize: result.size\n\t\t\t\t\t\t\t\t\t\tarchiveUpdatedAt: result.updatedAt\n\n\t\t\t\t\t\t\t\t\tclock = momentTimer\n\t\t\t\t\t\t\t\t\ttimeLeft = ->\n\t\t\t\t\t\t\t\t\t\tif clock > 0\n\t\t\t\t\t\t\t\t\t\t\tclock--\n\t\t\t\t\t\t\t\t\t\t\tSession.set 'timer',clock\n\t\t\t\t\t\t\t\t\t\t\tlog clock\n\t\t\t\t\t\t\t\t\t\t\tif clock is 0\n\t\t\t\t\t\t\t\t\t\t\t\tlog \"That's All Folks, let's cancel this clientside session\"\n\t\t\t\t\t\t\t\t\t\t\t\tsession.unpublish publisher\n\t\t\t\t\t\t\t\t\t\t\t\t#Meteor.clearInterval interval\n\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\tlog \"Uhhh else\"\n\t\t\t\t\t\t\t\t\t\t\t#session.unpublish publisher\n\t\t\t\t\t\t\t\t\t\t\tMeteor.clearInterval interval\n\t\t\t\t\t\t\t\t\tinterval = Meteor.setInterval(timeLeft, 1000)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\tstreamDestroyed: (event) ->\n\t\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t\t\tlog 'publishStream destroyed!',event\n\t\t\t\t\t\t\t#Session.set 'userIsPublishing',false\n\t\t\t\t\t\t\tMeteor.setTimeout(->\n\t\t\t\t\t\t\t\tSession.set 'timer', momentTimer\n\t\t\t\t\t\t\t,1000)\n\t\t\t\t\t#if window.subscriber then session.unsubscribe window.subscriber\n\t\t\t\t\tsession.publish publisher\n\t\t\t\t\tlayout()\n\t\t\t\telse\n\t\t\t\t\tlog 'Nope!'\n\n\t\t\t\tif Session.equals 'momentButtonTranslation', 0 then Session.set 'momentButtonTranslation', 200 else Session.set 'momentButtonTranslation', 0\n\n\t\t\t\tfview.modifier.halt()\n\t\t\t\tfview.modifier.setTransform Transform.translate(0, Session.get 'momentButtonTranslation'),\n\t\t\t\t\tmethod: 'spring'\n\t\t\t\t\tperiod: 1000\n\t\t\t\t\tdampingRatio: 0.3\n\t\t\t)\n\n\t\tTemplate.ppLogo.rendered = ->\n\t\t\tfview = FView.from(this)\n\n\t\t\ttarget = fview.surface || fview.view._eventInput\n\t\t\ttarget.on('click', () ->\n\t\t\t\tlog 'TARGET CLICKED',fview, target\n\n\t\t\t\tif Session.equals 'ppLogoTranslation', -10 then Session.set 'ppLogoTranslation', -100 else Session.set 'ppLogoTranslation', -10\n\n\t\t\t\tfview.modifier.halt()\n\t\t\t\tfview.modifier.setTransform Transform.translate(Session.get('ppLogoTranslation'), -10),\n\t\t\t\t\tmethod: 'spring'\n\t\t\t\t\tperiod: 1000\n\t\t\t\t\tdampingRatio: 0.3\n\t\t\t)\n\n\t\tTemplate.timer.rendered = ->\n\t\t\tfview = FView.from(this)\n\n\t\t\ttarget = fview.surface || fview.view._eventInput\n\t\t\ttarget.on('click', () ->\n\t\t\t\tlog 'TARGET CLICKED',fview, target\n\n\t\t\t\tif Session.equals 'timerTranslation', 300 then Session.set 'timerTranslation', 100 else Session.set 'timerTranslation', 300\n\n\t\t\t\tfview.modifier.halt()\n\t\t\t\tfview.modifier.setTransform Transform.translate(0, Session.get('timerTranslation')),\n\t\t\t\t\tmethod: 'spring'\n\t\t\t\t\tperiod: 1000\n\t\t\t\t\tdampingRatio: 0.3\n\t\t\t)\n\n\t\tTemplate.timer.helpers\n\t\t\ttimer: ->\n\t\t\t\tSession.get 'timer'\n\n\t\tTemplate.question.rendered = ->\n\t\t\tfview = FView.from(this)\n\n\t\t\ttarget = fview.surface || fview.view._eventInput\n\t\t\ttarget.on('click', () ->\n\t\t\t\tlog 'TARGET CLICKED',fview, target\n\n\t\t\t\tif Session.equals 'questionTranslation', -200 then Session.set 'questionTranslation', 0 else Session.set 'questionTranslation', -200\n\n\t\t\t\tfview.modifier.halt()\n\t\t\t\tfview.modifier.setTransform Transform.translate(0, Session.get('questionTranslation')),\n\t\t\t\t\tmethod: 'spring'\n\t\t\t\t\tperiod: 1000\n\t\t\t\t\tdampingRatio: 0.3\n\t\t\t)\n\n\t\tTemplate.timelineToggle.rendered = ->\n\t\t\tfview = FView.from(this)\n\n\t\t\ttarget = fview.surface || fview.view._eventInput\n\t\t\ttarget.on('click', () ->\n\t\t\t\tlog 'TARGET CLICKED',fview, target\n\n\t\t\t\tif Session.equals 'timelineToggleTranslation', -10 then Session.set 'timelineToggleTranslation', -100 else Session.set 'timelineToggleTranslation', -10\n\n\t\t\t\tfview.modifier.halt()\n\t\t\t\tfview.modifier.setTransform Transform.translate(Session.get('timelineToggleTranslation'), 10),\n\t\t\t\t\tmethod: 'spring'\n\t\t\t\t\tperiod: 1000\n\t\t\t\t\tdampingRatio: 0.3\n\t\t\t)\n\n\t\t#Timeline code\n\t\tSession.setDefault 'currentSecond',0\n\t\tSession.setDefault 'currentMinute',0\n\t\tSession.setDefault 'currentHour',0\n\t\tSession.setDefault 'currentDay',0\n\t\tSession.setDefault 'currentMonth',0\n\t\tSession.setDefault 'currentYear',0\n\n\t\tSession.setDefault 'epoch','2010-01-01 00:00'\n\t\tSession.setDefault 'epochSecond',moment(Session.get('epoch')).second()\n\t\tSession.setDefault 'epochMinute',moment(Session.get('epoch')).minute()\n\t\tSession.setDefault 'epochHour', moment(Session.get('epoch')).hour()\n\t\tSession.setDefault 'epochDay', moment(Session.get('epoch')).day()\n\t\tSession.setDefault 'epochMonth', moment(Session.get('epoch')).month()\n\t\tSession.setDefault 'epochYear', moment(Session.get('epoch')).year()\n\n\t\tTemplate.timelineMinuteScroller.rendered = ->\n\t\t\t#log 'TIMELINEMINUTESSCROLLER RENDERED',this\n\t\t\tfview = FView.from(this)\n\t\t\t#log 'TIMELINEMINUTESSCROLLER FVIEW',fview\n\t\t\ttarget = fview.surface || fview.view._eventInput\n\t\t\t#log 'TIMELINEMINUTESSCROLLER TARGET',target\n\t\t\tscrollView = fview.children[0].view._eventInput\n\t\t\t#log 'SCROLLVIEW?!',scrollView\n\t\t\twindow.timelineMinuteScroller = fview.children[0].view\n\t\t\t#Set the viewSequence within the scrollView to be a loop - XXX: Figure out a better way to do this by accessing Viewsequence\n\t\t\twindow.timelineMinuteSequence = window.timelineMinuteScroller._node\n\t\t\twindow.timelineMinuteSequence._.loop = true\n\n\t\t\tscrollView.on('start', (e) ->\n\t\t\t\t#log 'STARTING!!!!!!',this\n\t\t\t\t#log 'clientX',e.clientX\n\t\t\t\t#log 'clientY',e.clientY\n\t\t\t\t#log 'delta',e.delta\n\t\t\t\t#log 'offsetX',e.offsetX\n\t\t\t\t#log 'offsetY',e.offsetY\n\t\t\t\t#log 'position',e.position\n\t\t\t\t#log 'slip',e.slip\n\t\t\t\t#log 'velocity',e.velocity\n\t\t\t)\n\t\t\tscrollView.on('update', (e) ->\n\t\t\t\t#log 'UPDATING!!!!',this\n\t\t\t\t#log 'clientX',e.clientX\n\t\t\t\t#log 'clientY',e.clientY\n\t\t\t\t#log 'delta',e.delta\n\t\t\t\t#log 'offsetX',e.offsetX\n\t\t\t\t#log 'offsetY',e.offsetY\n\t\t\t\t#log 'position',e.position\n\t\t\t\t#timelineMinuteScroller.setPosition(400)\n\t\t\t\t#log 'slip',e.slip\n\t\t\t\t#log 'velocity',e.velocity\n\t\t\t)\n\t\t\tscrollView.on('end', (e) ->\n\t\t\t\t#log 'ENDING!!!!!!!',this, this._cachedIndex\n\t\t\t\t#log 'clientX',e.clientX\n\t\t\t\t#log 'clientY',e.clientY\n\t\t\t\t#log 'delta',e.delta\n\t\t\t\t#log 'offsetX',e.offsetX\n\t\t\t\t#log 'offsetY',e.offsetY\n\t\t\t\t#log 'position',e.position\n\t\t\t\t#log 'slip',e.slip\n\t\t\t\t#log 'velocity',e.velocity\n\t\t\t)\n\t\t\t@autorun((computation)->\n\t\t\t\tcurrentMinute = Session.get('currentMinute')\n\t\t\t\tpreviousMinute = window.timelineMinuteScroller.getCurrentIndex()\n\t\t\t\ttotalAmount = window.timelineMinuteScroller._node._.array.length\n\t\t\t\tamountMidPoint = totalAmount / 2\n\n\t\t\t\tlog '====================================================================='\n\n\t\t\t\t#What is the previousMinute?\n\t\t\t\tlog 'previousMinute',previousMinute\n\t\t\t\t#What is the currentMinute?\n\t\t\t\tlog 'currentMinute',currentMinute\n\n\t\t\t\tscrollStart = 0\n\t\t\t\t#log '&&&&&&&&&&&&&&&&&&&&&&&&&scrollStart&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&',scrollStart\n\n\t\t\t\tif previousMinute > amountMidPoint and currentMinute < amountMidPoint\n\t\t\t\t\t#log '***************We\\'re gonna overscroll past 0 here!*******(forwards)'\n\t\t\t\t\t#Calculate the forwards sroll distance\n\t\t\t\t\tscrollDistance = totalAmount + currentMinute - previousMinute\n\t\t\t\t\tif scrollDistance < 0 then scrollDistance = scrollDistance * -1 #Make sure that scrollDistance is always a positive number\n\t\t\t\t\t#log '##############currentMinute distance from previousMinute##############',scrollDistance\n\t\t\t\t\tfor i in [0..scrollDistance]\n\t\t\t\t\t\twindow.timelineMinuteScroller.goToNextPage()\n\t\t\t\telse if previousMinute < amountMidPoint and currentMinute > amountMidPoint\n\t\t\t\t\t#log '%%%%%%%%%%%%%%%We\\'re gonna overscroll past 1439 here!%%%%%(backwards)'\n\t\t\t\t\t#Calculate the backwards scroll distance\n\t\t\t\t\tscrollDistance = totalAmount + previousMinute - currentMinute\n\t\t\t\t\tif scrollDistance < 0 then scrollDistance = scrollDistance * -1 #Make sure that scrollDistance is always a positive number\n\t\t\t\t\t#log '@@@@@@@@@@@@@@currentMinute distance from previousMinute@@@@@@@@@@@@@@',scrollDistance\n\t\t\t\t\tfor i in [0..scrollDistance]\n\t\t\t\t\t\twindow.timelineMinuteScroller.goToPreviousPage()\n\t\t\t\telse\n\t\t\t\t\t#No overlaps going on here, just scroll normally to get things going for the time being, I can optimize this last.\n\t\t\t\t\t#log 'Just scroll as normal!'\n\t\t\t\t\tscrollDistance = previousMinute - currentMinute\n\t\t\t\t\tif scrollDistance < 0 then scrollDistance = scrollDistance * -1 #Make sure that scrollDistance is always a positive number\n\t\t\t\t\tif previousMinute < currentMinute\n\t\t\t\t\t\t#log '!!!!!!!!!!!!!currentMinute distance from previousMinute!(forwards)!!!!',scrollDistance\n\t\t\t\t\t\tfor i in [0..scrollDistance]\n\t\t\t\t\t\t\twindow.timelineMinuteScroller.goToNextPage()\n\t\t\t\t\telse\n\t\t\t\t\t\t#log '!!!!!!!!!!!!currentMinute distance from previousMinute!(backwards)!!!!',scrollDistance\n\t\t\t\t\t\tfor i in [0..scrollDistance]\n\t\t\t\t\t\t\twindow.timelineMinuteScroller.goToPreviousPage()\n\n\t\t\t\t#Get the Template instance\n\t\t\t\tinstance = Template.instance()\n\t\t\t\t#log 'AUTORUN INSTANCE',instance\n\t\t\t)\n\n\t\tTemplate.timelineMinuteScroller.helpers\n\t\t\ttimelineMinuteStyles: ->\n\t\t\t\t#backgroundColor: '#000000'\n\t\t\t\ttextAlign: 'center'\n\t\t\t\tcolor: '#ffffff'\n\n\t\tTemplate.timelineMinute.rendered = ->\n\t\t\tfview = FView.from(this)\n\t\t\tself = this\n\t\t\tdata = self.data\n\n\t\t\ttarget = fview.surface || fview.view._eventInput\n\t\t\t#log 'TIMELINE MINUTE RENDERED!',data\n\n\t\t\tmomentMinute = data.momentMinute\n\t\t\t#log 'MOMENT MINUTE',momentMinute.format('h:mm A')\n\n\t\t\tserverMoment = moment(TimeSync.serverTime())\n\t\t\t#log 'SERVER MOMENT',serverMoment.format('h:mm A'), momentMinute.format('h:mm A')\n\n\t\t\tif momentMinute.format('h:mm A') is serverMoment.format('h:mm A')\n\t\t\t\t#log 'SERVER MOMENT MATCH!!!!!',momentMinute.format('h:mm A')\n\t\t\t\t#log 'SERVER MOMENT DATA',data\n\t\t\t\tSession.set 'currentMinute',data.index\n\n\t\t\ttarget.on('click', () ->\n\t\t\t\t#log 'TIMELINE MINUTE CLICKED',fview, target, this, self\n\t\t\t\t#Get the current index at point of click\n\t\t\t\tSession.set('currentMinute',data.index)\n\t\t\t)\n\n\t\t\t@autorun((computation)->\n\t\t\t\tcurrentMinute = Session.get('currentMinute')\n\t\t\t\t#Get the Template instance\n\t\t\t\tinstance = Template.instance()\n\t\t\t\tdata = instance.data\n\t\t\t\tif currentMinute is data.index\n\t\t\t\t\tfview.modifier.halt()\n\t\t\t\t\tfview.modifier.setTransform Transform.translate(30, 0),\n\t\t\t\t\t\tmethod: 'spring'\n\t\t\t\t\t\tperiod: 1000\n\t\t\t\t\t\tdampingRatio: 0.3\n\t\t\t\telse\n\t\t\t\t\tfview.modifier.halt()\n\t\t\t\t\tfview.modifier.setTransform Transform.translate(0, 0),\n\t\t\t\t\t\tmethod: 'spring'\n\t\t\t\t\t\tperiod: 1000\n\t\t\t\t\t\tdampingRatio: 0.3\n\t\t\t)\n\n\t\tTemplate.timelineMinute.helpers\n\t\t\tminute: ->\n\t\t\t\tthis\n\n\t\tTemplate.timelineDayScroller.rendered = ->\n\t\t\t#log 'TIMELINEDAYSCROLLER RENDERED',this\n\t\t\tfview = FView.from(this)\n\t\t\t#log 'TIMELINEDAYSCROLLER FVIEW',fview\n\t\t\ttarget = fview.surface || fview.view._eventInput\n\t\t\t#log 'TIMELINEDAYSCROLLER TARGET',target\n\t\t\tscrollView = fview.children[1].view._eventInput\n\t\t\t#log 'SCROLLVIEW?!',scrollView\n\t\t\twindow.timelineDayScroller = fview.children[1].view\n\t\t\t#Set the viewSequence within the scrollView to be a loop - XXX: Figure out a better way to do this by accessing Viewsequence\n\t\t\twindow.timelineDaySequence = window.timelineDayScroller._node\n\t\t\twindow.timelineDaySequence._.loop = true\n\n\t\t\tscrollView.on('start', (e) ->\n\t\t\t\t#log 'STARTING!!!!!!',this\n\t\t\t\t#log 'clientX',e.clientX\n\t\t\t\t#log 'clientY',e.clientY\n\t\t\t\t#log 'delta',e.delta\n\t\t\t\t#log 'offsetX',e.offsetX\n\t\t\t\t#log 'offsetY',e.offsetY\n\t\t\t\t#log 'position',e.position\n\t\t\t\t#log 'slip',e.slip\n\t\t\t\t#log 'velocity',e.velocity\n\t\t\t)\n\t\t\tscrollView.on('update', (e) ->\n\t\t\t\t#log 'UPDATING!!!!',this\n\t\t\t\t#log 'clientX',e.clientX\n\t\t\t\t#log 'clientY',e.clientY\n\t\t\t\t#log 'delta',e.delta\n\t\t\t\t#log 'offsetX',e.offsetX\n\t\t\t\t#log 'offsetY',e.offsetY\n\t\t\t\t#log 'position',e.position\n\t\t\t\t#timelineDayScroller.setPosition(400)\n\t\t\t\t#log 'slip',e.slip\n\t\t\t\t#log 'velocity',e.velocity\n\t\t\t)\n\t\t\tscrollView.on('end', (e) ->\n\t\t\t\t#log 'ENDING!!!!!!!',this, this._cachedIndex\n\t\t\t\t#log 'clientX',e.clientX\n\t\t\t\t#log 'clientY',e.clientY\n\t\t\t\t#log 'delta',e.delta\n\t\t\t\t#log 'offsetX',e.offsetX\n\t\t\t\t#log 'offsetY',e.offsetY\n\t\t\t\t#log 'position',e.position\n\t\t\t\t#log 'slip',e.slip\n\t\t\t\t#log 'velocity',e.velocity\n\t\t\t)\n\t\t\t@autorun((computation)->\n\t\t\t\tcurrentDay = Session.get('currentDay')\n\t\t\t\tpreviousDay = window.timelineDayScroller.getCurrentIndex()\n\t\t\t\ttotalAmount = window.timelineDayScroller._node._.array.length\n\t\t\t\tamountMidPoint = totalAmount / 2\n\n\t\t\t\tlog '*********************************************************************'\n\n\t\t\t\t#What is the previousDay?\n\t\t\t\tlog 'previousDay',previousDay\n\t\t\t\t#What is the currentDay?\n\t\t\t\tlog 'currentDay',currentDay\n\n\t\t\t\tscrollStart = 0\n\t\t\t\t#log '&&&&&&&&&&&&&&&&&&&&&&&&&scrollStart&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&',scrollStart\n\n\t\t\t\tif previousDay > amountMidPoint and currentDay < amountMidPoint\n\t\t\t\t\t#log '***************We\\'re gonna overscroll past 0 here!*******(forwards)'\n\t\t\t\t\t#Calculate the forwards sroll distance\n\t\t\t\t\tscrollDistance = totalAmount + currentDay - previousDay\n\t\t\t\t\tif scrollDistance < 0 then scrollDistance = scrollDistance * -1 #Make sure that scrollDistance is always a positive number\n\t\t\t\t\t#log '##############currentDay distance from previousDay##############',scrollDistance\n\t\t\t\t\tfor i in [0..scrollDistance]\n\t\t\t\t\t\twindow.timelineDayScroller.goToNextPage()\n\t\t\t\telse if previousDay < amountMidPoint and currentDay > amountMidPoint\n\t\t\t\t\t#log '%%%%%%%%%%%%%%%We\\'re gonna overscroll past 1439 here!%%%%%(backwards)'\n\t\t\t\t\t#Calculate the backwards scroll distance\n\t\t\t\t\tscrollDistance = totalAmount + previousDay - currentDay\n\t\t\t\t\tif scrollDistance < 0 then scrollDistance = scrollDistance * -1 #Make sure that scrollDistance is always a positive number\n\t\t\t\t\t#log '@@@@@@@@@@@@@@currentDay distance from previousDay@@@@@@@@@@@@@@',scrollDistance\n\t\t\t\t\tfor i in [0..scrollDistance]\n\t\t\t\t\t\twindow.timelineDayScroller.goToPreviousPage()\n\t\t\t\telse\n\t\t\t\t\t#No overlaps going on here, just scroll normally to get things going for the time being, I can optimize this last.\n\t\t\t\t\t#log 'Just scroll as normal!'\n\t\t\t\t\tscrollDistance = previousDay - currentDay\n\t\t\t\t\tif scrollDistance < 0 then scrollDistance = scrollDistance * -1 #Make sure that scrollDistance is always a positive number\n\t\t\t\t\tif previousDay < currentDay\n\t\t\t\t\t\t#log '!!!!!!!!!!!!!currentDay distance from previousDay!(forwards)!!!!',scrollDistance\n\t\t\t\t\t\tfor i in [0..scrollDistance]\n\t\t\t\t\t\t\twindow.timelineDayScroller.goToNextPage()\n\t\t\t\t\telse\n\t\t\t\t\t\t#log '!!!!!!!!!!!!currentDay distance from previousDay!(backwards)!!!!',scrollDistance\n\t\t\t\t\t\tfor i in [0..scrollDistance]\n\t\t\t\t\t\t\twindow.timelineDayScroller.goToPreviousPage()\n\n\t\t\t\t#Get the Template instance\n\t\t\t\tinstance = Template.instance()\n\t\t\t\t#log 'AUTORUN INSTANCE',instance\n\t\t\t)\n\n\t\tTemplate.timelineDayScroller.helpers\n\t\t\ttimelineDayStyles: ->\n\t\t\t\t#backgroundColor: '#000000'\n\t\t\t\tcolor: '#ffffff'\n\n\t\tTemplate.timelineDay.rendered = ->\n\t\t\tfview = FView.from(this)\n\t\t\tself = this\n\t\t\tdata = self.data\n\n\t\t\ttarget = fview.surface || fview.view._eventInput\n\t\t\t#log 'TIMELINE DAY RENDERED!',data\n\n\t\t\tmomentDay = data.momentDay\n\t\t\t#log 'MOMENT DAY',momentDay.format('D')\n\n\t\t\tserverMoment = moment(TimeSync.serverTime())\n\t\t\t#log 'SERVER MOMENT',serverMoment.format('D'), momentDay.format('D')\n\n\t\t\tif momentDay.format('D') is serverMoment.format('D')\n\t\t\t\t#log 'SERVER MOMENT DAY MATCH!!!!!',serverMoment.format('M D'),momentDay.format('M D')\n\t\t\t\t#log 'SERVER MOMENT DAY DATA',data\n\t\t\t\tSession.set 'currentDay',data.index\n\n\t\t\ttarget.on('click', () ->\n\t\t\t\tlog 'TARGET CLICKED',fview, target\n\t\t\t\tSession.set('currentDay',data.index)\n\t\t\t)\n\n\t\t\t@autorun((computation)->\n\t\t\t\tcurrentDay = Session.get('currentDay')\n\t\t\t\t#Get the Template instance\n\t\t\t\tinstance = Template.instance()\n\t\t\t\tdata = instance.data\n\t\t\t\tif currentDay is data.index\n\t\t\t\t\tfview.modifier.halt()\n\t\t\t\t\tfview.modifier.setTransform Transform.translate(30, 0),\n\t\t\t\t\t\tmethod: 'spring'\n\t\t\t\t\t\tperiod: 1000\n\t\t\t\t\t\tdampingRatio: 0.3\n\t\t\t\telse\n\t\t\t\t\tfview.modifier.halt()\n\t\t\t\t\tfview.modifier.setTransform Transform.translate(0, 0),\n\t\t\t\t\t\tmethod: 'spring'\n\t\t\t\t\t\tperiod: 1000\n\t\t\t\t\t\tdampingRatio: 0.3\n\t\t\t)\n\n\t\tTemplate.timelineDay.helpers\n\t\t\tday: ->\n\t\t\t\tthis\n\n\t\tTemplate.timelineMonthScroller.rendered = ->\n\t\t\t#log 'timelineMonthScroller RENDERED',this\n\t\t\tfview = FView.from(this)\n\t\t\t#log 'timelineMonthScroller FVIEW',fview\n\t\t\ttarget = fview.surface || fview.view._eventInput\n\t\t\t#log 'timelineMonthScroller TARGET',target\n\t\t\tscrollView = fview.children[2].view._eventInput\n\t\t\t#log 'SCROLLVIEW?!',scrollView\n\t\t\twindow.timelineMonthScroller = fview.children[2].view\n\t\t\t#Set the viewSequence within the scrollView to be a loop - XXX: Figure out a better way to do this by accessing Viewsequence\n\t\t\twindow.timelineMonthSequence = window.timelineMonthScroller._node\n\t\t\twindow.timelineMonthSequence._.loop = true\n\n\t\t\tscrollView.on('start', (e) ->\n\t\t\t\t#log 'STARTING!!!!!!',this\n\t\t\t\t#log 'clientX',e.clientX\n\t\t\t\t#log 'clientY',e.clientY\n\t\t\t\t#log 'delta',e.delta\n\t\t\t\t#log 'offsetX',e.offsetX\n\t\t\t\t#log 'offsetY',e.offsetY\n\t\t\t\t#log 'position',e.position\n\t\t\t\t#log 'slip',e.slip\n\t\t\t\t#log 'velocity',e.velocity\n\t\t\t)\n\t\t\tscrollView.on('update', (e) ->\n\t\t\t\t#log 'UPDATING!!!!',this\n\t\t\t\t#log 'clientX',e.clientX\n\t\t\t\t#log 'clientY',e.clientY\n\t\t\t\t#log 'delta',e.delta\n\t\t\t\t#log 'offsetX',e.offsetX\n\t\t\t\t#log 'offsetY',e.offsetY\n\t\t\t\t#log 'position',e.position\n\t\t\t\t#timelineMonthScroller.setPosition(400)\n\t\t\t\t#log 'slip',e.slip\n\t\t\t\t#log 'velocity',e.velocity\n\t\t\t)\n\t\t\tscrollView.on('end', (e) ->\n\t\t\t\t#log 'ENDING!!!!!!!',this, this._cachedIndex\n\t\t\t\t#log 'clientX',e.clientX\n\t\t\t\t#log 'clientY',e.clientY\n\t\t\t\t#log 'delta',e.delta\n\t\t\t\t#log 'offsetX',e.offsetX\n\t\t\t\t#log 'offsetY',e.offsetY\n\t\t\t\t#log 'position',e.position\n\t\t\t\t#log 'slip',e.slip\n\t\t\t\t#log 'velocity',e.velocity\n\t\t\t)\n\t\t\t@autorun((computation)->\n\t\t\t\tcurrentMonth = Session.get('currentMonth')\n\t\t\t\tpreviousMonth = window.timelineMonthScroller.getCurrentIndex()\n\t\t\t\ttotalAmount = window.timelineMonthScroller._node._.array.length\n\t\t\t\tamountMidPoint = totalAmount / 2\n\n\t\t\t\tlog '*********************************************************************'\n\n\t\t\t\t#What is the previousMonth?\n\t\t\t\tlog 'previousMonth',previousMonth\n\t\t\t\t#What is the currentMonth?\n\t\t\t\tlog 'currentMonth',currentMonth\n\n\t\t\t\tscrollStart = 0\n\t\t\t\t#log '&&&&&&&&&&&&&&&&&&&&&&&&&scrollStart&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&',scrollStart\n\n\t\t\t\tif previousMonth > amountMidPoint and currentMonth < amountMidPoint\n\t\t\t\t\t#log '***************We\\'re gonna overscroll past 0 here!*******(forwards)'\n\t\t\t\t\t#Calculate the forwards sroll distance\n\t\t\t\t\tscrollDistance = totalAmount + currentMonth - previousMonth\n\t\t\t\t\tif scrollDistance < 0 then scrollDistance = scrollDistance * -1 #Make sure that scrollDistance is always a positive number\n\t\t\t\t\t#log '##############currentMonth distance from previousMonth##############',scrollDistance\n\t\t\t\t\tfor i in [0..scrollDistance]\n\t\t\t\t\t\twindow.timelineMonthScroller.goToNextPage()\n\t\t\t\telse if previousMonth < amountMidPoint and currentMonth > amountMidPoint\n\t\t\t\t\t#log '%%%%%%%%%%%%%%%We\\'re gonna overscroll past 1439 here!%%%%%(backwards)'\n\t\t\t\t\t#Calculate the backwards scroll distance\n\t\t\t\t\tscrollDistance = totalAmount + previousMonth - currentMonth\n\t\t\t\t\tif scrollDistance < 0 then scrollDistance = scrollDistance * -1 #Make sure that scrollDistance is always a positive number\n\t\t\t\t\t#log '@@@@@@@@@@@@@@currentMonth distance from previousMonth@@@@@@@@@@@@@@',scrollDistance\n\t\t\t\t\tfor i in [0..scrollDistance]\n\t\t\t\t\t\twindow.timelineMonthScroller.goToPreviousPage()\n\t\t\t\telse\n\t\t\t\t\t#No overlaps going on here, just scroll normally to get things going for the time being, I can optimize this last.\n\t\t\t\t\t#log 'Just scroll as normal!'\n\t\t\t\t\tscrollDistance = previousMonth - currentMonth\n\t\t\t\t\tif scrollDistance < 0 then scrollDistance = scrollDistance * -1 #Make sure that scrollDistance is always a positive number\n\t\t\t\t\tif previousMonth < currentMonth\n\t\t\t\t\t\t#log '!!!!!!!!!!!!!currentMonth distance from previousMonth!(forwards)!!!!',scrollDistance\n\t\t\t\t\t\tfor i in [0..scrollDistance]\n\t\t\t\t\t\t\twindow.timelineMonthScroller.goToNextPage()\n\t\t\t\t\telse\n\t\t\t\t\t\t#log '!!!!!!!!!!!!currentMonth distance from previousMonth!(backwards)!!!!',scrollDistance\n\t\t\t\t\t\tfor i in [0..scrollDistance]\n\t\t\t\t\t\t\twindow.timelineMonthScroller.goToPreviousPage()\n\n\t\t\t\t#Get the Template instance\n\t\t\t\tinstance = Template.instance()\n\t\t\t\t#log 'AUTORUN INSTANCE',instance\n\t\t\t)\n\n\t\tTemplate.timelineMonthScroller.helpers\n\t\t\ttimelineMonthStyles: ->\n\t\t\t\t#backgroundColor: '#000000'\n\t\t\t\tcolor: '#ffffff'\n\n\t\tTemplate.timelineMonth.rendered = ->\n\t\t\tfview = FView.from(this)\n\t\t\tself = this\n\t\t\tdata = self.data\n\n\t\t\ttarget = fview.surface || fview.view._eventInput\n\t\t\t#log 'TIMELINE MONTH RENDERED!',data\n\n\t\t\tmomentMonth = data.momentMonth\n\t\t\t#log 'MOMENT MONTH',momentMonth.format('M')\n\n\t\t\tserverMoment = moment(TimeSync.serverTime())\n\t\t\t#log 'SERVER MOMENT',serverMoment.format('M'), momentMonth.format('M')\n\n\t\t\tif momentMonth.format('M') is serverMoment.format('M')\n\t\t\t\tlog 'SERVER MOMENT MONTH MATCH!!!!!',serverMoment.format('M'),momentMonth.format('M')\n\t\t\t\t#log 'SERVER MOMENT MONTH DATA',data\n\t\t\t\tSession.set 'currentMonth',data.index\n\n\t\t\ttarget.on('click', () ->\n\t\t\t\tlog 'TARGET CLICKED',fview, target\n\t\t\t\tSession.set('currentMonth',data.index)\n\t\t\t)\n\n\t\t\t@autorun((computation)->\n\t\t\t\tcurrentMonth = Session.get('currentMonth')\n\t\t\t\t#Get the Template instance\n\t\t\t\tinstance = Template.instance()\n\t\t\t\tdata = instance.data\n\t\t\t\tif currentMonth is data.index\n\t\t\t\t\tfview.modifier.halt()\n\t\t\t\t\tfview.modifier.setTransform Transform.translate(30, 0),\n\t\t\t\t\t\tmethod: 'spring'\n\t\t\t\t\t\tperiod: 1000\n\t\t\t\t\t\tdampingRatio: 0.3\n\t\t\t\telse\n\t\t\t\t\tfview.modifier.halt()\n\t\t\t\t\tfview.modifier.setTransform Transform.translate(0, 0),\n\t\t\t\t\t\tmethod: 'spring'\n\t\t\t\t\t\tperiod: 1000\n\t\t\t\t\t\tdampingRatio: 0.3\n\t\t\t)\n\n\t\tTemplate.timelineMonth.helpers\n\t\t\tmonth: ->\n\t\t\t\tthis\n\n\t\tTemplate.timelineYearScroller.rendered = ->\n\t\t\t#log 'timelineYearSCROLLER RENDERED',this\n\t\t\tfview = FView.from(this)\n\t\t\t#log 'timelineYearSCROLLER FVIEW',fview\n\t\t\ttarget = fview.surface || fview.view._eventInput\n\t\t\t#log 'timelineYearSCROLLER TARGET',target\n\t\t\tscrollView = fview.children[3].view._eventInput\n\t\t\t#log 'SCROLLVIEW?!',scrollView\n\t\t\twindow.timelineYearScroller = fview.children[3].view\n\t\t\t#Set the viewSequence within the scrollView to be a loop - XXX: Figure out a better way to do this by accessing Viewsequence\n\t\t\twindow.timelineYearSequence = window.timelineYearScroller._node\n\t\t\twindow.timelineYearSequence._.loop = true\n\n\t\t\tscrollView.on('start', (e) ->\n\t\t\t\t#log 'STARTING!!!!!!',this\n\t\t\t\t#log 'clientX',e.clientX\n\t\t\t\t#log 'clientY',e.clientY\n\t\t\t\t#log 'delta',e.delta\n\t\t\t\t#log 'offsetX',e.offsetX\n\t\t\t\t#log 'offsetY',e.offsetY\n\t\t\t\t#log 'position',e.position\n\t\t\t\t#log 'slip',e.slip\n\t\t\t\t#log 'velocity',e.velocity\n\t\t\t)\n\t\t\tscrollView.on('update', (e) ->\n\t\t\t\t#log 'UPDATING!!!!',this\n\t\t\t\t#log 'clientX',e.clientX\n\t\t\t\t#log 'clientY',e.clientY\n\t\t\t\t#log 'delta',e.delta\n\t\t\t\t#log 'offsetX',e.offsetX\n\t\t\t\t#log 'offsetY',e.offsetY\n\t\t\t\t#log 'position',e.position\n\t\t\t\t#timelineYearScroller.setPosition(400)\n\t\t\t\t#log 'slip',e.slip\n\t\t\t\t#log 'velocity',e.velocity\n\t\t\t)\n\t\t\tscrollView.on('end', (e) ->\n\t\t\t\t#log 'ENDING!!!!!!!',this, this._cachedIndex\n\t\t\t\t#log 'clientX',e.clientX\n\t\t\t\t#log 'clientY',e.clientY\n\t\t\t\t#log 'delta',e.delta\n\t\t\t\t#log 'offsetX',e.offsetX\n\t\t\t\t#log 'offsetY',e.offsetY\n\t\t\t\t#log 'position',e.position\n\t\t\t\t#log 'slip',e.slip\n\t\t\t\t#log 'velocity',e.velocity\n\t\t\t)\n\t\t\t@autorun((computation)->\n\t\t\t\tcurrentYear = Session.get('currentYear')\n\t\t\t\tpreviousYear = window.timelineYearScroller.getCurrentIndex()\n\t\t\t\ttotalAmount = window.timelineYearScroller._node._.array.length\n\t\t\t\tamountMidPoint = totalAmount / 2\n\n\t\t\t\tlog '*********************************************************************'\n\n\t\t\t\t#What is the previousYear?\n\t\t\t\tlog 'previousYear',previousYear\n\t\t\t\t#What is the currentYear?\n\t\t\t\tlog 'currentYear',currentYear\n\n\t\t\t\tscrollStart = 0\n\t\t\t\t#log '&&&&&&&&&&&&&&&&&&&&&&&&&scrollStart&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&',scrollStart\n\n\t\t\t\tif previousYear > amountMidPoint and currentYear < amountMidPoint\n\t\t\t\t\t#log '***************We\\'re gonna overscroll past 0 here!*******(forwards)'\n\t\t\t\t\t#Calculate the forwards sroll distance\n\t\t\t\t\tscrollDistance = totalAmount + currentYear - previousYear\n\t\t\t\t\tif scrollDistance < 0 then scrollDistance = scrollDistance * -1 #Make sure that scrollDistance is always a positive number\n\t\t\t\t\t#log '##############currentYear distance from previousYear##############',scrollDistance\n\t\t\t\t\tfor i in [0..scrollDistance]\n\t\t\t\t\t\twindow.timelineYearScroller.goToNextPage()\n\t\t\t\telse if previousYear < amountMidPoint and currentYear > amountMidPoint\n\t\t\t\t\t#log '%%%%%%%%%%%%%%%We\\'re gonna overscroll past 1439 here!%%%%%(backwards)'\n\t\t\t\t\t#Calculate the backwards scroll distance\n\t\t\t\t\tscrollDistance = totalAmount + previousYear - currentYear\n\t\t\t\t\tif scrollDistance < 0 then scrollDistance = scrollDistance * -1 #Make sure that scrollDistance is always a positive number\n\t\t\t\t\t#log '@@@@@@@@@@@@@@currentYear distance from previousYear@@@@@@@@@@@@@@',scrollDistance\n\t\t\t\t\tfor i in [0..scrollDistance]\n\t\t\t\t\t\twindow.timelineYearScroller.goToPreviousPage()\n\t\t\t\telse\n\t\t\t\t\t#No overlaps going on here, just scroll normally to get things going for the time being, I can optimize this last.\n\t\t\t\t\t#log 'Just scroll as normal!'\n\t\t\t\t\tscrollDistance = previousYear - currentYear\n\t\t\t\t\tif scrollDistance < 0 then scrollDistance = scrollDistance * -1 #Make sure that scrollDistance is always a positive number\n\t\t\t\t\tif previousYear < currentYear\n\t\t\t\t\t\t#log '!!!!!!!!!!!!!currentYear distance from previousYear!(forwards)!!!!',scrollDistance\n\t\t\t\t\t\tfor i in [0..scrollDistance]\n\t\t\t\t\t\t\twindow.timelineYearScroller.goToNextPage()\n\t\t\t\t\telse\n\t\t\t\t\t\t#log '!!!!!!!!!!!!currentYear distance from previousYear!(backwards)!!!!',scrollDistance\n\t\t\t\t\t\tfor i in [0..scrollDistance]\n\t\t\t\t\t\t\twindow.timelineYearScroller.goToPreviousPage()\n\n\t\t\t\t#Get the Template instance\n\t\t\t\tinstance = Template.instance()\n\t\t\t\t#log 'AUTORUN INSTANCE',instance\n\t\t\t)\n\n\t\tTemplate.timelineYearScroller.helpers\n\t\t\ttimelineYearStyles: ->\n\t\t\t\t#backgroundColor: '#000000'\n\t\t\t\tcolor: '#ffffff'\n\n\t\tTemplate.timelineYear.rendered = ->\n\t\t\tfview = FView.from(this)\n\t\t\tself = this\n\t\t\tdata = self.data\n\n\t\t\ttarget = fview.surface || fview.view._eventInput\n\t\t\t#log 'TIMELINE YEAR RENDERED!',data\n\n\t\t\tmomentYear = data.momentYear\n\t\t\t#log 'MOMENT YEAR',momentYear.format('YYYY')\n\n\t\t\tserverMoment = moment(TimeSync.serverTime())\n\t\t\t#log 'SERVER MOMENT',serverMoment.format('YYYY'), momentYear.format('YYYY')\n\n\t\t\tif momentYear.format('YYYY') is serverMoment.format('YYYY')\n\t\t\t\t#log 'SERVER MOMENT YEAR MATCH!!!!!',serverMoment.format('YYYY'),momentYear.format('YYYY')\n\t\t\t\t#log 'SERVER MOMENT YEAR DATA',data\n\t\t\t\tSession.set 'currentYear',data.index\n\n\t\t\ttarget.on('click', () ->\n\t\t\t\tlog 'TARGET CLICKED',fview, target\n\t\t\t\tSession.set('currentYear',data.index)\n\t\t\t)\n\n\t\t\t@autorun((computation)->\n\t\t\t\tcurrentYear = Session.get('currentYear')\n\t\t\t\t#Get the Template instance\n\t\t\t\tinstance = Template.instance()\n\t\t\t\tdata = instance.data\n\t\t\t\tif currentYear is data.index\n\t\t\t\t\tfview.modifier.halt()\n\t\t\t\t\tfview.modifier.setTransform Transform.translate(30, 0),\n\t\t\t\t\t\tmethod: 'spring'\n\t\t\t\t\t\tperiod: 1000\n\t\t\t\t\t\tdampingRatio: 0.3\n\t\t\t\telse\n\t\t\t\t\tfview.modifier.halt()\n\t\t\t\t\tfview.modifier.setTransform Transform.translate(0, 0),\n\t\t\t\t\t\tmethod: 'spring'\n\t\t\t\t\t\tperiod: 1000\n\t\t\t\t\t\tdampingRatio: 0.3\n\t\t\t)\n\n\t\tTemplate.timelineYear.helpers\n\t\t\tyear: ->\n\t\t\t\tthis\n\n\t\tTemplate.timelineMoment.rendered = ->\n\t\t\tfview = FView.from(this)\n\n\t\t\ttarget = fview.surface || fview.view._eventInput\n\t\t\ttarget.on('click', () ->\n\t\t\t\tlog 'TIMELINE MOMENT CLICKED',fview, target, this\n\n\t\t\t\t#if Session.equals 'timelineToggleTranslation', -10 then Session.set 'timelineToggleTranslation', -100 else Session.set 'timelineToggleTranslation', -10\n\n\t\t\t\tfview.modifier.halt()\n\t\t\t\tfview.modifier.setTransform Transform.translate(10, 10),\n\t\t\t\t\tmethod: 'spring'\n\t\t\t\t\tperiod: 1000\n\t\t\t\t\tdampingRatio: 0.3\n\t\t\t)\n\n\t\tTemplate.timelineMoment.helpers\n\t\t\tmoment: ->\n\t\t\t\tinstance = Template.instance()\n\t\t\t\t#log 'timelineMoment instance!',instance\n\t\t\t\tdata = instance.data\n\t\t\t\tdata\n\t\t\t\tthis\n\t\t\t\t#if typeof index is 'object'\n\t\t\t\t#\t0\n\t\t\t\t#else\n\t\t\t\t#\tindex\n\nif Meteor.isServer\n\tMeteor.methods\n\t\tcreateOpenTokSession: () ->\n\t\t\tlog 'Meteor.userId()',Meteor.userId()\n\n\t\t\topenTokSessionOptions =\n\t\t\t\trole: 'publisher'\n\t\t\t\tdata: 'userId:' + Meteor.userId()\n\t\t\t\texpireTime: Math.round(new Date().getTime() / 1000) + 86400\n\n\t\t\ttoken = openTokClient.generateToken openTokSession, openTokSessionOptions\n\t\t\tlog 'token',token\n\t\t\tpayload =\n\t\t\t\tapiKey: openTokApiKey\n\t\t\t\tsession: openTokSession\n\t\t\t\ttoken: token\n\t\t\tpayload\n\t\tcreateMoment: () ->\n\t\t\tlog 'Server createMoment called!'\n\n\t\t\t#Create an archive!\n\t\t\topenTokArchiveOptions =\n\t\t\t\tname: 'moment:' + Meteor.userId()\n\n\t\t\tarchive = openTokClient.startArchive openTokSession, openTokArchiveOptions\n\n\t\t\t#Start the timer!\n\t\t\tclock = momentTimer\n\t\t\ttimeLeft = ->\n\t\t\t\tif clock > 1\n\t\t\t\t\tclock--\n\t\t\t\t\tlog clock\n\t\t\t\t\t#We've hit our time limit, wrap it up gentlemen.\n\t\t\t\t\tif clock is 1\n\t\t\t\t\t\tunless archive.status is 'stopped'\n\t\t\t\t\t\t\tarchive = openTokClient.stopArchive archive.id\n\t\t\t\t\t\t\tstoredArchive =\n\t\t\t\t\t\t\t\tarchiveCreatedAt: archive.createdAt\n\t\t\t\t\t\t\t\ttokboxArchiveId: archive.id\n\t\t\t\t\t\t\t\ttokboxArchiveName: archive.name\n\t\t\t\t\t\t\t\ttokboxPartnerId: archive.partnerId\n\t\t\t\t\t\t\t\ttokboxSessionId: archive.sessionId\n\t\t\t\t\t\t\t\tarchiveUpdatedAt: archive.updatedAt\n\n\t\t\t\t\t\t\tMoments.insert storedArchive\n\t\t\t\t\t\t\t,\n\t\t\t\t\t\t\t\t(error,id)->\n\t\t\t\t\t\t\t\t\tlog 'error' if error\n\t\t\t\t\t\t\t\t\tlog 'Moments insert callback!',id\n\n\t\t\t\t\t\t\tlog 'That\\'s All Folks, let\\'s cancel this server session archive',archive,storedArchive\n\t\t\t\t\t\tMeteor.clearInterval interval\n\t\t\t\t#else\n\t\t\t\t#\tlog 'Other stuff'\n\t\t\tinterval = Meteor.setInterval(timeLeft, 1000)\n\n\t\t\tlog 'Sigh archive',archive\n\t\t\tarchive\n\t\tlistArchives: () ->\n\t\t\tlog 'listArchives called!'\n\n\t\t\topenTokClient.listArchives\n\t\t\t\tcount: 50\n\t\t\t, (error,archives,totalCount)->\n\t\t\t\tlog 'listArchives error',error if error\n\t\t\t\tlog 'archives',archives\n\t\t\t\tlog 'totalCount',totalCount\n\t\tstopMoment: (archiveId) ->\n\t\t\tlog 'Server stopMoment called!'\n\t\t\tlog 'archive?',archiveId\n\t\t\tarchive = openTokClient.stopArchive archiveId\n\t\t\tarchive\n\n\tMeteor.startup ->\n\t\tlog 'Server!'\n\n\t\t# Wipe all guest accounts that are more than 24 hours old, this way people can say something once a day\n\t\tAccounts.removeOldGuests();\n\n\t\t# Initialize OpenTokClient\n\t\t@openTokSecret = 'ce949e452e117eef38d2661e9e1824f8faddff40'\n\t\t@openTokClient = new OpenTokClient openTokApiKey, openTokSecret\n\t\t#@openTok = new OpenTok openTokApiKey, openTokSecret\n\t\t#log 'openTokClient',openTokClient\n\n\t\tlog 'createOpenTokSession!'\n\t\topenTokOptions =\n\t\t\tmediaMode: 'routed'\n\t\t\tlocation: '127.0.0.1'\n\n\t\t@openTokSession = openTokClient.createSession openTokOptions\n\t\tlog 'openTokSession',openTokSession\n\n\t\t# Create a reverse timeline\n\t\tepoch = moment '2010-01-01 00:00'\n\t\tlog 'Server epoch!',epoch\n\t\tnow = moment()\n\t\tlog 'Server now!',now\n\n\t\tlog 'Get archives'\n\n"]}